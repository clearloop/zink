var searchIndex = new Map(JSON.parse('[["elko",{"t":"FFFONNNNCNNOONNNNNOONOCOOOONNNNNNCFNNNNNNONNNNNONOONNNNNNSSFSNNNNNNNNNNNNNOONNNNNNPPPGPPFPIFOOCOOOOOCCFFFFONNNNNNNNNNNNNNNNNNNNONNNNONNNNONNNNNNNNNNNNONOONNNNNNNNNNNNNNNNNNNNOOPPPGPPPINNNNNNNNNNNNNNNNNFNNNNNNONNONOONNNNNN","n":["Build","Compile","New","abi","augment_args","augment_args_for_update","borrow","borrow_mut","build","command","command_for_update","config","dispatcher","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","input","","into","name","new","out_dir","output","","path","run","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","utils","Build","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","config","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","input","into","out_dir","output","run","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","ADDITION","NAME","New","README","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","name","","path","run","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","Anyhow","CargoMetadata","Err","Error","Etc","Io","Manifest","Ok","Result","WasmBuilder","dependencies","lib","manifest","metadata","out_dir","output","package","","result","wasm","Dependencies","Lib","Manifest","Package","authors","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","crate_type","default","","","","dependencies","deserialize","","","","edition","fmt","","","","from","","","","into","","","","lib","name","","package","serialize","","","","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","version","zink","Anyhow","CargoMetadata","Err","Error","Etc","Io","Ok","Result","borrow","borrow_mut","fmt","","from","","","","","header","in_current_span","into","source","to_string","try_from","try_into","type_id","WasmBuilder","borrow","borrow_mut","build","compile","from","into","metadata","new","out_dir","","output","","package","post","try_from","try_into","type_id","with_out_dir","with_output"],"q":[[0,"elko"],[34,"elko::build"],[57,"elko::new"],[82,"elko::utils"],[102,"elko::utils::manifest"],[176,"elko::utils::result"],[201,"elko::utils::wasm"],[221,"clap_builder::builder::command"],[222,"zinkc::cli"],[223,"core::fmt"],[224,"core::result"],[225,"clap_builder::parser::matches::arg_matches"],[226,"clap_builder::error"],[227,"clap_builder::util::id"],[228,"core::option"],[229,"anyhow"],[230,"core::any"],[231,"clap_builder"],[232,"alloc::string"],[233,"serde::de"],[234,"serde::ser"],[235,"std::io::error"],[236,"etc::error"],[237,"cargo_metadata::errors"],[238,"color_eyre::section"],[239,"core::marker"],[240,"core::error"],[241,"std::path"],[242,"core::convert"]],"i":"```h0000`00An111111011Bf`1120222222``1111111111111111111111````000000000000000000000Ch0Dl`11`0``C`0`Dj0001``````Bj0BlBn421042104210421041210442104221042104210444242104210421042104210420665`665`66666666666666666`3333333333333333333","f":"````{bb}0{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}`{{}b}0``{{{d{h}}{d{fj}}}{{A`{ln}}}}{cc{}}{{{d{Ab}}}{{A`{hAd}}}}{{{d{fAb}}}{{A`{hAd}}}}{{}{{Ah{Af}}}}``{{}c{}}``````{{{d{h}}}{{A`{lAj}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{dAl}{{{d{fh}}{d{Ab}}}{{A`{lAd}}}}{{{d{fh}}{d{fAb}}}{{A`{lAd}}}}``??>=<<`{{{d{An}}{d{fj}}}B`};{{{d{Ab}}}{{A`{AnBb}}}}{{{d{fAb}}}{{A`{AnBb}}}}:`9``{{{d{An}}}{{Bd{l}}}}876{{{d{fAn}}{d{Ab}}}{{A`{lBb}}}}{{{d{fAn}}{d{fAb}}}{{A`{lBb}}}}````{bb}0{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{}b}0{{{d{Bf}}{d{fj}}}B`}{cc{}}{{{d{Ab}}}{{A`{BfBb}}}}{{{d{fAb}}}{{A`{BfBb}}}}{{}{{Ah{Af}}}}{{}c{}}{{{d{Bf}}}{{Bd{Bh}}}}``{{{d{Bf}}}{{Bd{l}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{dAl}{{{d{fBf}}{d{Ab}}}{{A`{lBb}}}}{{{d{fBf}}{d{fAb}}}{{A`{lBb}}}}`````````````````````````????>>>>{{{d{Bj}}}Bj}{{{d{Bl}}}Bl}{{{d{Bn}}}Bn}{{{d{C`}}}C`}{{d{d{fc}}}l{}}000{dl}000`{{}Bj}{{}Bl}{{}Bn}{{}C`}`{c{{A`{Bj}}}Cb}{c{{A`{Bl}}}Cb}{c{{A`{Bn}}}Cb}{c{{A`{C`}}}Cb}`{{{d{Bj}}{d{fj}}}B`}{{{d{Bl}}{d{fj}}}B`}{{{d{Bn}}{d{fj}}}B`}{{{d{C`}}{d{fj}}}B`}{cc{}}000{{}c{}}000`{{{d{fC`}}{d{Cd}}}{{d{fC`}}}}``{{{d{Bj}}c}A`Cf}{{{d{Bl}}c}A`Cf}{{{d{Bn}}c}A`Cf}{{{d{C`}}c}A`Cf}{dc{}}000{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{dAl}000``````````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{Ch}}{d{fj}}}B`}0={CjCh}{ClCh}{CnCh}{AjCh}{c{{D`{ce}}}{DbDdDf}{}}{{}}{{}c{}}{{{d{Ch}}}{{Ah{{d{Dh}}}}}}{dBh}>=<`;:{{{d{Dj}}}{{Dl{l}}}}0{cc{}}4`{c{{Dl{Dj}}}{{E`{Dn}}}}{{{d{Dj}}}{{Dl{Dn}}}}`0``3{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{dAl}{{{d{fDj}}c}{{d{fDj}}}{{E`{Dn}}}}0","D":"K`","p":[[5,"Command",221],[1,"reference"],[0,"mut"],[5,"Compile",0,222],[5,"Formatter",223],[1,"unit"],[5,"Error",223],[6,"Result",224],[5,"ArgMatches",225],[5,"Error",226],[5,"Id",227],[6,"Option",228],[5,"Error",229],[5,"TypeId",230],[5,"Build",34],[8,"Result",223],[8,"Error",231],[8,"Result",229],[5,"New",57],[5,"String",232],[5,"Package",102],[5,"Lib",102],[5,"Dependencies",102],[5,"Manifest",102],[10,"Deserializer",233],[1,"str"],[10,"Serializer",234],[6,"Error",176],[5,"Error",235],[6,"Error",236],[6,"Error",237],[5,"IndentedSection",238],[10,"Display",223],[10,"Send",239],[10,"Sync",239],[10,"Error",240],[5,"WasmBuilder",201],[8,"Result",176],[5,"PathBuf",241],[10,"Into",242]],"r":[[0,34],[1,222],[2,57],[85,176],[88,102],[90,176],[91,201]],"b":[[186,"impl-Display-for-Error"],[187,"impl-Debug-for-Error"],[189,"impl-From%3CError%3E-for-Error"],[190,"impl-From%3CError%3E-for-Error"],[191,"impl-From%3CError%3E-for-Error"],[192,"impl-From%3CError%3E-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIUAHQAEAAQACgABAA0AAQAQAAIAFAAAABoAAQAdAAQAJAAFACsAAAAtAAIANQAGAD0ABwBGAAIATAAAAE4ABABgAAMAbAATAIEAAwCGAAMAiwADAJsAEwC5AAMAvgAFAMUABADLAAEA0QAAANQAAADWAAEA2QACAA=="}],["evm_opcodes",{"t":"PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPGPNNNNNNNNNNNNNNNNQNNMMNNQNNCMMMNNNNNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPNNNNNNNNNNNNNNNNNNNNNN","n":["ADD","ADDMOD","ADDRESS","AND","BALANCE","BLOCKHASH","BYTE","Berlin","BlockInformation","Byzantium","CALL","CALLCODE","CALLDATACOPY","CALLDATALOAD","CALLDATASIZE","CALLER","CALLVALUE","CODECOPY","CODESIZE","COINBASE","CREATE","CREATE2","ComparisonBitwiseLogic","Constantinople","DELEGATECALL","DIFFICULTY","DIV","DUP1","DUP10","DUP11","DUP12","DUP13","DUP14","DUP15","DUP16","DUP2","DUP3","DUP4","DUP5","DUP6","DUP7","DUP8","DUP9","Data","Duplication","EQ","EXP","EXTCODECOPY","EXTCODESIZE","EnvironmentalInformation","Exchange","Frontier","GAS","GASLIMIT","GASPRICE","GT","Group","INVALID","ISZERO","Istanbul","JUMP","JUMPDEST","JUMPI","LOG0","LOG1","LOG2","LOG3","LOG4","LT","Logging","London","MLOAD","MOD","MSIZE","MSTORE","MSTORE8","MUL","MULMOD","NOT","NUMBER","OR","ORIGIN","OpCode","PC","POP","PUSH0","PUSH1","PUSH10","PUSH11","PUSH12","PUSH13","PUSH14","PUSH15","PUSH16","PUSH17","PUSH18","PUSH19","PUSH2","PUSH20","PUSH21","PUSH22","PUSH23","PUSH24","PUSH25","PUSH26","PUSH27","PUSH28","PUSH29","PUSH3","PUSH30","PUSH31","PUSH32","PUSH4","PUSH5","PUSH6","PUSH7","PUSH8","PUSH9","Push","RETURN","RETURNDATACOPY","RETURNDATASIZE","REVERT","SAR","SDIV","SELFDESTRUCT","SGT","SHA3","SHL","SHR","SIGNEXTEND","SLOAD","SLT","SMOD","SSTORE","STATICCALL","STOP","SUB","SWAP1","SWAP10","SWAP11","SWAP12","SWAP13","SWAP14","SWAP15","SWAP16","SWAP2","SWAP3","SWAP4","SWAP5","SWAP6","SWAP7","SWAP8","SWAP9","Sha3","ShangHai","Shanghai","StackMemoryStorageFlow","StopArithmetic","System","TIMESTAMP","Upgrade","XOR","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cmp","","eq","","fmt","","for_each_shanghai_operator","from","","gas","group","into","","opcodes","partial_cmp","","shanghai","since","stack_in","stack_out","to_owned","","try_from","","try_into","","type_id","","ADD","ADDMOD","ADDRESS","AND","BALANCE","BLOCKHASH","BYTE","CALL","CALLCODE","CALLDATACOPY","CALLDATALOAD","CALLDATASIZE","CALLER","CALLVALUE","CODECOPY","CODESIZE","COINBASE","CREATE","CREATE2","DELEGATECALL","DIFFICULTY","DIV","DUP1","DUP10","DUP11","DUP12","DUP13","DUP14","DUP15","DUP16","DUP2","DUP3","DUP4","DUP5","DUP6","DUP7","DUP8","DUP9","Data","EQ","EXP","EXTCODECOPY","EXTCODESIZE","GAS","GASLIMIT","GASPRICE","GT","INVALID","ISZERO","JUMP","JUMPDEST","JUMPI","LOG0","LOG1","LOG2","LOG3","LOG4","LT","MLOAD","MOD","MSIZE","MSTORE","MSTORE8","MUL","MULMOD","NOT","NUMBER","OR","ORIGIN","PC","POP","PUSH0","PUSH1","PUSH10","PUSH11","PUSH12","PUSH13","PUSH14","PUSH15","PUSH16","PUSH17","PUSH18","PUSH19","PUSH2","PUSH20","PUSH21","PUSH22","PUSH23","PUSH24","PUSH25","PUSH26","PUSH27","PUSH28","PUSH29","PUSH3","PUSH30","PUSH31","PUSH32","PUSH4","PUSH5","PUSH6","PUSH7","PUSH8","PUSH9","RETURN","RETURNDATACOPY","RETURNDATASIZE","REVERT","SAR","SDIV","SELFDESTRUCT","SGT","SHA3","SHL","SHR","SIGNEXTEND","SLOAD","SLT","SMOD","SSTORE","STATICCALL","STOP","SUB","SWAP1","SWAP10","SWAP11","SWAP12","SWAP13","SWAP14","SWAP15","SWAP16","SWAP2","SWAP3","SWAP4","SWAP5","SWAP6","SWAP7","SWAP8","SWAP9","ShangHai","TIMESTAMP","XOR","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","eq","fmt","from","","from_str","gas","group","into","partial_cmp","since","stack_in","stack_out","to_owned","try_from","try_into","type_id"],"q":[[0,"evm_opcodes"],[201,"evm_opcodes::shanghai"],[365,"core::cmp"],[366,"core::fmt"],[367,"core::option"],[368,"core::result"],[369,"core::any"]],"i":"An000000hf12222222222220122222222222222222222022220012222`2212222222220122222222222`222222222222222222222222222222222220222222222222222222222222222222222220`10002`20101010101010101`01Ad012`12`000121212123333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333`333333333333333333333333","f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{f}}}f}{{{b{h}}}h}{{b{b{dc}}}j{}}0{bj}0{{{b{f}}{b{f}}}l}{{{b{h}}{b{h}}}l}{{{b{f}}{b{f}}}n}{{{b{h}}{b{h}}}n}{{{b{f}}{b{dA`}}}Ab}{{{b{h}}{b{dA`}}}Ab}`{cc{}}0{{{b{Ad}}}Af}{{{b{Ad}}}f}{{}c{}}0`{{{b{f}}{b{f}}}{{Ah{l}}}}{{{b{h}}{b{h}}}{{Ah{l}}}}`{{{b{Ad}}}h}55{bc{}}0{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{bAl}0``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{An}}}An}{{b{b{dc}}}j{}}{bj}{{{b{An}}{b{An}}}l}{{{b{An}}{b{An}}}n}{{{b{An}}{b{dA`}}}Ab}{B`An}{cc{}}{{{b{Bb}}}{{Aj{Anc}}}{}}{{{b{An}}}Af}{{{b{An}}}f}{{}c{}}{{{b{An}}{b{An}}}{{Ah{l}}}}{{{b{An}}}h}44{bc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bAl}","D":"BH`","p":[[1,"reference"],[0,"mut"],[6,"Group",0],[6,"Upgrade",0],[1,"unit"],[6,"Ordering",365],[1,"bool"],[5,"Formatter",366],[8,"Result",366],[10,"OpCode",0],[1,"u16"],[6,"Option",367],[6,"Result",368],[5,"TypeId",369],[6,"ShangHai",201],[1,"u8"],[1,"str"]],"r":[[155,201]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC0ABgCkAA8AvAABAMIABwBYAQgAYgECAGYBBwA="}],["sol_abi",{"t":"FFPPGPPPCCOOOOOOFPPGNNNNNNNNNNNNNNNNNNNNNNNONNOONNNNNNNNNONNFPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNONN","n":["Abi","Arg","Int32","Int64","Param","UInt32","UInt64","Unknown","abi","arg","inputs","name","","outputs","ty","","Abi","Constructor","Function","Type","as_ref","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deserialize","","fmt","","","from","","","","from_str","inputs","into","","name","outputs","serialize","","to_owned","","to_string","try_from","","try_into","","ty","type_id","","Arg","Int32","Int64","Param","UInt32","UInt64","Unknown","as_ref","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deserialize","","fmt","","","from","","","","from_str","into","","name","serialize","","to_owned","","to_string","try_from","","try_into","","ty","type_id",""],"q":[[0,"sol_abi"],[16,"sol_abi::abi"],[60,"sol_abi::arg"],[105,"core::result"],[106,"serde::de"],[107,"core::fmt"],[108,"syn::item"],[109,"serde::ser"],[110,"alloc::string"],[111,"core::any"],[112,"syn::ty"],[113,"alloc::boxed"]],"i":"``An0`000``j0B`110`b0`0202020202020202002200022022202002020220`33`33331313131313131313313333131131331313113","f":"````````````````````{{{d{b}}}{{d{f}}}}{d{{d{c}}}{}}0{{{d{h}}}{{d{hc}}}{}}0{{{d{j}}}j}{{{d{b}}}b}{{d{d{hc}}}l{}}0{dl}0{{}j}{{}b}{c{{n{j}}}A`}{c{{n{b}}}A`}{{{d{j}}{d{hAb}}}Ad}{{{d{b}}{d{hAb}}}Ad}0{{{d{Af}}}j}{cc{}}0{{{d{f}}}b}{{{d{f}}}{{n{bc}}}{}}`{{}c{}}0``{{{d{j}}c}nAh}{{{d{b}}c}nAh}{dc{}}0{dAj}{c{{n{e}}}{}{}}0{{}{{n{c}}}{}}0`{dAl}0```````{{{d{An}}}{{d{f}}}}{d{{d{c}}}{}}0{{{d{h}}}{{d{hc}}}{}}0{{{d{B`}}}B`}{{{d{An}}}An}{{d{d{hc}}}l{}}0{dl}0{{}B`}{{}An}{c{{n{B`}}}A`}{c{{n{An}}}A`}{{{d{B`}}{d{hAb}}}Ad}{{{d{An}}{d{hAb}}}Ad}0{cc{}}{{{d{{Bd{Bb}}}}}An}{{{d{f}}}An}2{{{d{f}}}{{n{Anc}}}{}}{{}c{}}0`{{{d{B`}}c}nAh}{{{d{An}}c}nAh}{dc{}}0{dAj}{c{{n{e}}}{}{}}0{{}{{n{c}}}{}}0`{dAl}0","D":"Ed","p":[[6,"Type",16],[1,"reference"],[1,"str"],[0,"mut"],[5,"Abi",16],[1,"unit"],[6,"Result",105],[10,"Deserializer",106],[5,"Formatter",107],[8,"Result",107],[5,"Signature",108],[10,"Serializer",109],[5,"String",110],[5,"TypeId",111],[6,"Param",60],[5,"Arg",60],[6,"Type",112],[5,"Box",113]],"r":[[0,16],[1,60],[4,60]],"b":[[36,"impl-Debug-for-Type"],[37,"impl-Display-for-Type"],[83,"impl-Display-for-Param"],[84,"impl-Debug-for-Param"],[86,"impl-From%3C%26Box%3CType%3E%3E-for-Param"],[87,"impl-From%3C%26str%3E-for-Param"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAD8ACQAVABIAKgABADEACAA7AAEARAARAFcAAQBaAAAAXgAIAGgAAQA="}],["zabi",{"t":"FNNNNNNNNNNNNNNNNCNCCNNNNNNNNNNPGPPPINNNNNNNNNNNNNHH","n":["Abi","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","fmt","","from","","from_bytes","from_hex","from_str","hex_impl","into","result","selector","","serialize","signature","to_bytes","to_hex","to_owned","to_string","try_from","try_into","type_id","Err","Error","Hex","Ok","Postcard","Result","borrow","borrow_mut","fmt","","from","","","into","source","to_string","try_from","try_into","type_id","keccak256","parse"],"q":[[0,"zabi"],[31,"zabi::result"],[50,"zabi::selector"],[52,"core::result"],[53,"serde::de"],[54,"core::fmt"],[55,"syn::item"],[56,"postcard::error"],[57,"core::convert"],[58,"serde::ser"],[59,"alloc::string"],[60,"alloc::vec"],[61,"core::any"],[62,"hex::error"],[63,"core::error"],[64,"core::option"]],"i":"`f000000000000000`0``0000000000Al`Bj10`0000000000000``","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}f}{{b{b{dc}}}h{}}{bh}{{}f}{{{b{f}}}{{b{c}}}{}}{{{b{df}}}{{b{dc}}}{}}{c{{j{f}}}l}{{{b{f}}{b{dn}}}A`}0{{{b{Ab}}}f}{cc{}}{c{{Ad{f}}}{{Aj{{Ah{Af}}}}}}{c{{Al{f}}}{{Aj{An}}}}{{{b{An}}}{{Al{f}}}}`{{}c{}}``{{{b{f}}}{{B`{Af}}}}{{{b{f}}c}jBb}{{{b{f}}}Bd}{{{b{f}}}{{Ad{{Bf{Af}}}}}}{{{b{f}}}{{Al{Bd}}}}{bc{}}{bBd}{c{{j{e}}}{}{}}{{}{{j{c}}}{}}{bBh}``````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Bj}}{b{dn}}}A`}0{cc{}}{BlBj}{BnBj}{{}c{}}{{{b{Bj}}}{{Cb{{b{C`}}}}}};:98{{{b{{Ah{Af}}}}}{{B`{Af}}}}0","D":"Bl","p":[[1,"reference"],[0,"mut"],[5,"Abi",0],[1,"unit"],[6,"Result",52],[10,"Deserializer",53],[5,"Formatter",54],[8,"Result",54],[5,"Signature",55],[8,"Result",56],[1,"u8"],[1,"slice"],[10,"AsRef",57],[8,"Result",31],[1,"str"],[1,"array"],[10,"Serializer",58],[5,"String",59],[5,"Vec",60],[5,"TypeId",61],[6,"Error",31],[6,"FromHexError",62],[6,"Error",56],[10,"Error",63],[6,"Option",64]],"r":[],"b":[[10,"impl-Display-for-Abi"],[11,"impl-Debug-for-Abi"],[39,"impl-Debug-for-Error"],[40,"impl-Display-for-Error"],[42,"impl-From%3CFromHexError%3E-for-Error"],[43,"impl-From%3CError%3E-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB4ABwACAAsAEQABABcAAAAbAAQAJgADACsAAQAuAAQA"}],["zingen",{"t":"PFSPPIPFFFFGPPFPPPPGPPPFPPPIPPPPPPPPPFPPPFFPFPPIPPPPPPOCOOCOOOCCOOOOOOOOOOCOCOCOOOOOOCOOOOOOOOOCCCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNOQNNNNOONNNNFNNNNNONNNNNNNEEEEEECCCCFFNNNNONNNNNNNNNNNNNNNNNONNNNNONNOONNNNNNNNNFINNNNNNNNNNONNNNNNFOONNNONNNONNNNNONNNFNNNNNNNNNNNNNNNNNNNNONNNNONNONNNNNNNOONNONONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFFGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNONONNNNNNNNNONNNPPGEPPNNNNNNNNNNNNNNCCCNNNNHHFNNNNNNNONNNNNONONNNNNNNNNNNNNNNFGFPPNNNNNNNNNNNNNNNNNNNOONNNNNNNNNONNNNNNNONNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNCNNNNCCNNNNCNNNCNNNNONNCNONCNNNNNNNNPPPPPPPPGPPPPPPPPPPPPPPPPPPPIPPPPPPNNNNNNNNNNNNNFNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCQCCQFPFPFFFGFPRKKCONNNNNNNNNNNNNNNCONNNNNNNONNNNNNCCQONNNNNMMNNNNNNNNNNNNOSRKKNNQMMFNNNNNNNNNNNNNNNNFFNONNNNNNNNNNNNNNNNNNNNNOPPGPNNNNNNNNNNNNNNNNNNNNNN","n":["Abi","Assembler","BUFFER_LIMIT","BinaryReader","Block","Buffer","BufferOverflow","Code","Constructor","ControlStack","ControlStackFrame","ControlStackFrameType","ControlStackUnderflow","DataNotFound","Dispatcher","DuplicateFunc","DuplicateJump","Else","Err","Error","ExtFuncNotFound","FuncNotFound","FuncNotImported","Function","HostFuncNotFound","If","ImportedFuncNotFound","InitStorage","InvalidDataOffset","InvalidDataSize","InvalidDepth","InvalidElseBlock","InvalidFunctionSignature","InvalidLocalIndex","InvalidMP","InvalidPC","InvalidSelector","JumpTable","LabelMismatch","LocalIndexOutOfRange","LocalNotOnStack","LocalSlot","Locals","Loop","MacroAssembler","MemoryOutOfBounds","Ok","Result","SelectorNotFound","StackIndexOutOfRange","StackNotBalanced","StackOverflow","StackUnderflow","UnsupportedHostFunc","abi","asm","","","backtrace","","buffer","code","codegen","control","","env","","func","funcs","","gas","inner","","is_main","jump","","local","locals","masm","","","mp","offset","original_pc_offset","original_sp","result","","sp","","stack","table","","ty","","","validator","visitor","wasm","Assembler","_add","_addmod","_address","_and","_balance","_blockhash","_byte","_call","_callcode","_calldatacopy","_calldataload","_calldatasize","_caller","_callvalue","_codecopy","_codesize","_coinbase","_create","_create2","_delegatecall","_difficulty","_div","_dup1","_dup10","_dup11","_dup12","_dup13","_dup14","_dup15","_dup16","_dup2","_dup3","_dup4","_dup5","_dup6","_dup7","_dup8","_dup9","_eq","_exp","_extcodecopy","_extcodesize","_gas","_gaslimit","_gasprice","_gt","_invalid","_iszero","_jump","_jumpdest","_jumpi","_log0","_log1","_log2","_log3","_log4","_lt","_mload","_mod","_msize","_mstore","_mstore8","_mul","_mulmod","_not","_number","_or","_origin","_pc","_pop","_push0","_push1","_push10","_push11","_push12","_push13","_push14","_push15","_push16","_push17","_push18","_push19","_push2","_push20","_push21","_push22","_push23","_push24","_push25","_push26","_push27","_push28","_push29","_push3","_push30","_push31","_push32","_push4","_push5","_push6","_push7","_push8","_push9","_return","_returndatacopy","_returndatasize","_revert","_sar","_sdiv","_selfdestruct","_sgt","_sha3","_shl","_shr","_signextend","_sload","_slt","_smod","_sstore","_staticcall","_stop","_sub","_swap1","_swap10","_swap11","_swap12","_swap13","_swap14","_swap15","_swap16","_swap2","_swap3","_swap4","_swap5","_swap6","_swap7","_swap8","_swap9","_timestamp","_xor","borrow","borrow_mut","buffer","","buffer_mut","clone","clone_into","clone_to_uninit","decrement_mp","decrement_sp","default","emit","emit_op","emitn","fmt","from","gas","impl_opcodes","increment_gas","increment_mp","increment_sp","into","mp","sp","to_owned","try_from","try_into","type_id","Backtrace","borrow","borrow_mut","default","fmt","from","instrs","into","pop","popn","push","try_from","try_into","type_id","Code","Constructor","Dispatcher","ExtFunc","Function","InitStorage","code","constructor","dispatcher","function","Code","ExtFunc","borrow","","borrow_mut","","bytecode","clone","","clone_into","","clone_to_uninit","","default","eq","equivalent","","","finish","fmt","","from","","funcs","","hash","into","","new","offset","","offset_of","shift","stack_in","stack_out","to_owned","","try_add_func","try_from","","try_into","","type_id","","Constructor","InitStorage","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","finish","fmt","from","into","masm","runtime_bytcode_offset","storage","to_owned","try_from","try_into","type_id","Dispatcher","abi","asm","borrow","borrow_mut","emit_selector","env","ext_return","finish","from","funcs","into","load_abi","new","process","query_func","table","try_from","try_into","type_id","Function","_block","_br","_br_if","_br_table","_call","_call_indirect","_else","_end","_global_get","_global_set","_if","_local_get","_local_get_calldata","_local_get_var","_local_set","_local_tee","_loop","_nop","_select","_unreachable","backtrace","borrow","borrow_mut","call_imported","call_internal","control","emit_locals","emit_operators","env","finish","from","handle_call_return","handle_frame_popping","handle_jumpdest","handle_return","into","is_main","locals","log","log_data","masm","new","table","try_from","try_into","ty","type_id","visit_any_convert_extern","visit_array_copy","visit_array_fill","visit_array_get","visit_array_get_s","visit_array_get_u","visit_array_init_data","visit_array_init_elem","visit_array_len","visit_array_new","visit_array_new_data","visit_array_new_default","visit_array_new_elem","visit_array_new_fixed","visit_array_set","visit_atomic_fence","visit_block","visit_br","visit_br_if","visit_br_on_cast","visit_br_on_cast_fail","visit_br_on_non_null","visit_br_on_null","visit_br_table","visit_call","visit_call_indirect","visit_call_ref","visit_catch","visit_catch_all","visit_data_drop","visit_delegate","visit_drop","visit_elem_drop","visit_else","visit_end","visit_extern_convert_any","visit_f32_abs","visit_f32_add","visit_f32_ceil","visit_f32_const","visit_f32_convert_i32_s","visit_f32_convert_i32_u","visit_f32_convert_i64_s","visit_f32_convert_i64_u","visit_f32_copysign","visit_f32_demote_f64","visit_f32_div","visit_f32_eq","visit_f32_floor","visit_f32_ge","visit_f32_gt","visit_f32_le","visit_f32_load","visit_f32_lt","visit_f32_max","visit_f32_min","visit_f32_mul","visit_f32_ne","visit_f32_nearest","visit_f32_neg","visit_f32_reinterpret_i32","visit_f32_sqrt","visit_f32_store","visit_f32_sub","visit_f32_trunc","visit_f32x4_abs","visit_f32x4_add","visit_f32x4_ceil","visit_f32x4_convert_i32x4_s","visit_f32x4_convert_i32x4_u","visit_f32x4_demote_f64x2_zero","visit_f32x4_div","visit_f32x4_eq","visit_f32x4_extract_lane","visit_f32x4_floor","visit_f32x4_ge","visit_f32x4_gt","visit_f32x4_le","visit_f32x4_lt","visit_f32x4_max","visit_f32x4_min","visit_f32x4_mul","visit_f32x4_ne","visit_f32x4_nearest","visit_f32x4_neg","visit_f32x4_pmax","visit_f32x4_pmin","visit_f32x4_relaxed_madd","visit_f32x4_relaxed_max","visit_f32x4_relaxed_min","visit_f32x4_relaxed_nmadd","visit_f32x4_replace_lane","visit_f32x4_splat","visit_f32x4_sqrt","visit_f32x4_sub","visit_f32x4_trunc","visit_f64_abs","visit_f64_add","visit_f64_ceil","visit_f64_const","visit_f64_convert_i32_s","visit_f64_convert_i32_u","visit_f64_convert_i64_s","visit_f64_convert_i64_u","visit_f64_copysign","visit_f64_div","visit_f64_eq","visit_f64_floor","visit_f64_ge","visit_f64_gt","visit_f64_le","visit_f64_load","visit_f64_lt","visit_f64_max","visit_f64_min","visit_f64_mul","visit_f64_ne","visit_f64_nearest","visit_f64_neg","visit_f64_promote_f32","visit_f64_reinterpret_i64","visit_f64_sqrt","visit_f64_store","visit_f64_sub","visit_f64_trunc","visit_f64x2_abs","visit_f64x2_add","visit_f64x2_ceil","visit_f64x2_convert_low_i32x4_s","visit_f64x2_convert_low_i32x4_u","visit_f64x2_div","visit_f64x2_eq","visit_f64x2_extract_lane","visit_f64x2_floor","visit_f64x2_ge","visit_f64x2_gt","visit_f64x2_le","visit_f64x2_lt","visit_f64x2_max","visit_f64x2_min","visit_f64x2_mul","visit_f64x2_ne","visit_f64x2_nearest","visit_f64x2_neg","visit_f64x2_pmax","visit_f64x2_pmin","visit_f64x2_promote_low_f32x4","visit_f64x2_relaxed_madd","visit_f64x2_relaxed_max","visit_f64x2_relaxed_min","visit_f64x2_relaxed_nmadd","visit_f64x2_replace_lane","visit_f64x2_splat","visit_f64x2_sqrt","visit_f64x2_sub","visit_f64x2_trunc","visit_global_get","visit_global_set","visit_i16x8_abs","visit_i16x8_add","visit_i16x8_add_sat_s","visit_i16x8_add_sat_u","visit_i16x8_all_true","visit_i16x8_avgr_u","visit_i16x8_bitmask","visit_i16x8_eq","visit_i16x8_extadd_pairwise_i8x16_s","visit_i16x8_extadd_pairwise_i8x16_u","visit_i16x8_extend_high_i8x16_s","visit_i16x8_extend_high_i8x16_u","visit_i16x8_extend_low_i8x16_s","visit_i16x8_extend_low_i8x16_u","visit_i16x8_extmul_high_i8x16_s","visit_i16x8_extmul_high_i8x16_u","visit_i16x8_extmul_low_i8x16_s","visit_i16x8_extmul_low_i8x16_u","visit_i16x8_extract_lane_s","visit_i16x8_extract_lane_u","visit_i16x8_ge_s","visit_i16x8_ge_u","visit_i16x8_gt_s","visit_i16x8_gt_u","visit_i16x8_le_s","visit_i16x8_le_u","visit_i16x8_lt_s","visit_i16x8_lt_u","visit_i16x8_max_s","visit_i16x8_max_u","visit_i16x8_min_s","visit_i16x8_min_u","visit_i16x8_mul","visit_i16x8_narrow_i32x4_s","visit_i16x8_narrow_i32x4_u","visit_i16x8_ne","visit_i16x8_neg","visit_i16x8_q15mulr_sat_s","visit_i16x8_relaxed_dot_i8x16_i7x16_s","visit_i16x8_relaxed_laneselect","visit_i16x8_relaxed_q15mulr_s","visit_i16x8_replace_lane","visit_i16x8_shl","visit_i16x8_shr_s","visit_i16x8_shr_u","visit_i16x8_splat","visit_i16x8_sub","visit_i16x8_sub_sat_s","visit_i16x8_sub_sat_u","visit_i31_get_s","visit_i31_get_u","visit_i32_add","visit_i32_and","visit_i32_atomic_load","visit_i32_atomic_load16_u","visit_i32_atomic_load8_u","visit_i32_atomic_rmw16_add_u","visit_i32_atomic_rmw16_and_u","visit_i32_atomic_rmw16_cmpxchg_u","visit_i32_atomic_rmw16_or_u","visit_i32_atomic_rmw16_sub_u","visit_i32_atomic_rmw16_xchg_u","visit_i32_atomic_rmw16_xor_u","visit_i32_atomic_rmw8_add_u","visit_i32_atomic_rmw8_and_u","visit_i32_atomic_rmw8_cmpxchg_u","visit_i32_atomic_rmw8_or_u","visit_i32_atomic_rmw8_sub_u","visit_i32_atomic_rmw8_xchg_u","visit_i32_atomic_rmw8_xor_u","visit_i32_atomic_rmw_add","visit_i32_atomic_rmw_and","visit_i32_atomic_rmw_cmpxchg","visit_i32_atomic_rmw_or","visit_i32_atomic_rmw_sub","visit_i32_atomic_rmw_xchg","visit_i32_atomic_rmw_xor","visit_i32_atomic_store","visit_i32_atomic_store16","visit_i32_atomic_store8","visit_i32_clz","visit_i32_const","visit_i32_ctz","visit_i32_div_s","visit_i32_div_u","visit_i32_eq","visit_i32_eqz","visit_i32_extend16_s","visit_i32_extend8_s","visit_i32_ge_s","visit_i32_ge_u","visit_i32_gt_s","visit_i32_gt_u","visit_i32_le_s","visit_i32_le_u","visit_i32_load","visit_i32_load16_s","visit_i32_load16_u","visit_i32_load8_s","visit_i32_load8_u","visit_i32_lt_s","visit_i32_lt_u","visit_i32_mul","visit_i32_ne","visit_i32_or","visit_i32_popcnt","visit_i32_reinterpret_f32","visit_i32_rem_s","visit_i32_rem_u","visit_i32_rotl","visit_i32_rotr","visit_i32_shl","visit_i32_shr_s","visit_i32_shr_u","visit_i32_store","visit_i32_store16","visit_i32_store8","visit_i32_sub","visit_i32_trunc_f32_s","visit_i32_trunc_f32_u","visit_i32_trunc_f64_s","visit_i32_trunc_f64_u","visit_i32_trunc_sat_f32_s","visit_i32_trunc_sat_f32_u","visit_i32_trunc_sat_f64_s","visit_i32_trunc_sat_f64_u","visit_i32_wrap_i64","visit_i32_xor","visit_i32x4_abs","visit_i32x4_add","visit_i32x4_all_true","visit_i32x4_bitmask","visit_i32x4_dot_i16x8_s","visit_i32x4_eq","visit_i32x4_extadd_pairwise_i16x8_s","visit_i32x4_extadd_pairwise_i16x8_u","visit_i32x4_extend_high_i16x8_s","visit_i32x4_extend_high_i16x8_u","visit_i32x4_extend_low_i16x8_s","visit_i32x4_extend_low_i16x8_u","visit_i32x4_extmul_high_i16x8_s","visit_i32x4_extmul_high_i16x8_u","visit_i32x4_extmul_low_i16x8_s","visit_i32x4_extmul_low_i16x8_u","visit_i32x4_extract_lane","visit_i32x4_ge_s","visit_i32x4_ge_u","visit_i32x4_gt_s","visit_i32x4_gt_u","visit_i32x4_le_s","visit_i32x4_le_u","visit_i32x4_lt_s","visit_i32x4_lt_u","visit_i32x4_max_s","visit_i32x4_max_u","visit_i32x4_min_s","visit_i32x4_min_u","visit_i32x4_mul","visit_i32x4_ne","visit_i32x4_neg","visit_i32x4_relaxed_dot_i8x16_i7x16_add_s","visit_i32x4_relaxed_laneselect","visit_i32x4_relaxed_trunc_f32x4_s","visit_i32x4_relaxed_trunc_f32x4_u","visit_i32x4_relaxed_trunc_f64x2_s_zero","visit_i32x4_relaxed_trunc_f64x2_u_zero","visit_i32x4_replace_lane","visit_i32x4_shl","visit_i32x4_shr_s","visit_i32x4_shr_u","visit_i32x4_splat","visit_i32x4_sub","visit_i32x4_trunc_sat_f32x4_s","visit_i32x4_trunc_sat_f32x4_u","visit_i32x4_trunc_sat_f64x2_s_zero","visit_i32x4_trunc_sat_f64x2_u_zero","visit_i64_add","visit_i64_and","visit_i64_atomic_load","visit_i64_atomic_load16_u","visit_i64_atomic_load32_u","visit_i64_atomic_load8_u","visit_i64_atomic_rmw16_add_u","visit_i64_atomic_rmw16_and_u","visit_i64_atomic_rmw16_cmpxchg_u","visit_i64_atomic_rmw16_or_u","visit_i64_atomic_rmw16_sub_u","visit_i64_atomic_rmw16_xchg_u","visit_i64_atomic_rmw16_xor_u","visit_i64_atomic_rmw32_add_u","visit_i64_atomic_rmw32_and_u","visit_i64_atomic_rmw32_cmpxchg_u","visit_i64_atomic_rmw32_or_u","visit_i64_atomic_rmw32_sub_u","visit_i64_atomic_rmw32_xchg_u","visit_i64_atomic_rmw32_xor_u","visit_i64_atomic_rmw8_add_u","visit_i64_atomic_rmw8_and_u","visit_i64_atomic_rmw8_cmpxchg_u","visit_i64_atomic_rmw8_or_u","visit_i64_atomic_rmw8_sub_u","visit_i64_atomic_rmw8_xchg_u","visit_i64_atomic_rmw8_xor_u","visit_i64_atomic_rmw_add","visit_i64_atomic_rmw_and","visit_i64_atomic_rmw_cmpxchg","visit_i64_atomic_rmw_or","visit_i64_atomic_rmw_sub","visit_i64_atomic_rmw_xchg","visit_i64_atomic_rmw_xor","visit_i64_atomic_store","visit_i64_atomic_store16","visit_i64_atomic_store32","visit_i64_atomic_store8","visit_i64_clz","visit_i64_const","visit_i64_ctz","visit_i64_div_s","visit_i64_div_u","visit_i64_eq","visit_i64_eqz","visit_i64_extend16_s","visit_i64_extend32_s","visit_i64_extend8_s","visit_i64_extend_i32_s","visit_i64_extend_i32_u","visit_i64_ge_s","visit_i64_ge_u","visit_i64_gt_s","visit_i64_gt_u","visit_i64_le_s","visit_i64_le_u","visit_i64_load","visit_i64_load16_s","visit_i64_load16_u","visit_i64_load32_s","visit_i64_load32_u","visit_i64_load8_s","visit_i64_load8_u","visit_i64_lt_s","visit_i64_lt_u","visit_i64_mul","visit_i64_ne","visit_i64_or","visit_i64_popcnt","visit_i64_reinterpret_f64","visit_i64_rem_s","visit_i64_rem_u","visit_i64_rotl","visit_i64_rotr","visit_i64_shl","visit_i64_shr_s","visit_i64_shr_u","visit_i64_store","visit_i64_store16","visit_i64_store32","visit_i64_store8","visit_i64_sub","visit_i64_trunc_f32_s","visit_i64_trunc_f32_u","visit_i64_trunc_f64_s","visit_i64_trunc_f64_u","visit_i64_trunc_sat_f32_s","visit_i64_trunc_sat_f32_u","visit_i64_trunc_sat_f64_s","visit_i64_trunc_sat_f64_u","visit_i64_xor","visit_i64x2_abs","visit_i64x2_add","visit_i64x2_all_true","visit_i64x2_bitmask","visit_i64x2_eq","visit_i64x2_extend_high_i32x4_s","visit_i64x2_extend_high_i32x4_u","visit_i64x2_extend_low_i32x4_s","visit_i64x2_extend_low_i32x4_u","visit_i64x2_extmul_high_i32x4_s","visit_i64x2_extmul_high_i32x4_u","visit_i64x2_extmul_low_i32x4_s","visit_i64x2_extmul_low_i32x4_u","visit_i64x2_extract_lane","visit_i64x2_ge_s","visit_i64x2_gt_s","visit_i64x2_le_s","visit_i64x2_lt_s","visit_i64x2_mul","visit_i64x2_ne","visit_i64x2_neg","visit_i64x2_relaxed_laneselect","visit_i64x2_replace_lane","visit_i64x2_shl","visit_i64x2_shr_s","visit_i64x2_shr_u","visit_i64x2_splat","visit_i64x2_sub","visit_i8x16_abs","visit_i8x16_add","visit_i8x16_add_sat_s","visit_i8x16_add_sat_u","visit_i8x16_all_true","visit_i8x16_avgr_u","visit_i8x16_bitmask","visit_i8x16_eq","visit_i8x16_extract_lane_s","visit_i8x16_extract_lane_u","visit_i8x16_ge_s","visit_i8x16_ge_u","visit_i8x16_gt_s","visit_i8x16_gt_u","visit_i8x16_le_s","visit_i8x16_le_u","visit_i8x16_lt_s","visit_i8x16_lt_u","visit_i8x16_max_s","visit_i8x16_max_u","visit_i8x16_min_s","visit_i8x16_min_u","visit_i8x16_narrow_i16x8_s","visit_i8x16_narrow_i16x8_u","visit_i8x16_ne","visit_i8x16_neg","visit_i8x16_popcnt","visit_i8x16_relaxed_laneselect","visit_i8x16_relaxed_swizzle","visit_i8x16_replace_lane","visit_i8x16_shl","visit_i8x16_shr_s","visit_i8x16_shr_u","visit_i8x16_shuffle","visit_i8x16_splat","visit_i8x16_sub","visit_i8x16_sub_sat_s","visit_i8x16_sub_sat_u","visit_i8x16_swizzle","visit_if","visit_local_get","visit_local_set","visit_local_tee","visit_loop","visit_memory_atomic_notify","visit_memory_atomic_wait32","visit_memory_atomic_wait64","visit_memory_copy","visit_memory_discard","visit_memory_fill","visit_memory_grow","visit_memory_init","visit_memory_size","visit_nop","visit_ref_as_non_null","visit_ref_cast_non_null","visit_ref_cast_nullable","visit_ref_eq","visit_ref_func","visit_ref_i31","visit_ref_is_null","visit_ref_null","visit_ref_test_non_null","visit_ref_test_nullable","visit_rethrow","visit_return","visit_return_call","visit_return_call_indirect","visit_return_call_ref","visit_select","visit_struct_get","visit_struct_get_s","visit_struct_get_u","visit_struct_new","visit_struct_new_default","visit_struct_set","visit_table_copy","visit_table_fill","visit_table_get","visit_table_grow","visit_table_init","visit_table_set","visit_table_size","visit_throw","visit_throw_ref","visit_try","visit_try_table","visit_typed_select","visit_unreachable","visit_v128_and","visit_v128_andnot","visit_v128_any_true","visit_v128_bitselect","visit_v128_const","visit_v128_load","visit_v128_load16_lane","visit_v128_load16_splat","visit_v128_load16x4_s","visit_v128_load16x4_u","visit_v128_load32_lane","visit_v128_load32_splat","visit_v128_load32_zero","visit_v128_load32x2_s","visit_v128_load32x2_u","visit_v128_load64_lane","visit_v128_load64_splat","visit_v128_load64_zero","visit_v128_load8_lane","visit_v128_load8_splat","visit_v128_load8x8_s","visit_v128_load8x8_u","visit_v128_not","visit_v128_or","visit_v128_store","visit_v128_store16_lane","visit_v128_store32_lane","visit_v128_store64_lane","visit_v128_store8_lane","visit_v128_xor","Block","ControlStack","ControlStackFrame","ControlStackFrameType","Else","If","Loop","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","default","depth","eq","equivalent","","","fmt","from","","","into","","","label_from_depth","mark_else","new","original_pc_offset","original_sp","pc_offset","pop","push","result","","ret_ty","stack","to_owned","","try_from","","","try_into","","","ty","","type_id","","","ExtFunc","Func","Jump","JumpTable","Label","Offset","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","equivalent","","","fmt","from","into","is_label","is_offset","pc","relocate","table","to_owned","try_from","try_into","type_id","offset","pc","JumpTable","borrow","borrow_mut","call","call_offset","clone","clone_into","clone_to_uninit","code","code_offset","default","ext","fmt","from","func","into","jump","label","merge","offset","relocate","shift_func_target","shift_label_pc","shift_label_target","shift_pc","shift_target","shift_targets","target","to_owned","try_from","try_into","type_id","LocalSlot","LocalSlotType","Locals","Parameter","Variable","borrow","","","borrow_mut","","","default","eq","equivalent","","","fmt","","","from","","","get","get_mut","inner","","into","","","is_empty","len","new","offset_of","push","size","sp","try_from","","","try_into","","","ty","","type_id","","","val_ty","MacroAssembler","MemoryInfo","_abs","_ceil","_clz","_convert_i32_s","_convert_i32_u","_convert_i64_s","_convert_i64_u","_copysign","_ctz","_drop","_eqz","_f32_const","_f32_demote_f64","_f32_reinterpret_i32","_f64_const","_f64_promote_f32","_f64_reinterpret_i64","_floor","_ge","_gt","_i32_const","_i32_reinterpret_f32","_i32_wrap_i64","_i64_const","_i64_extend_i32_s","_i64_extend_i32_u","_i64_reinterpret_f64","_le","_load","_load16","_load32","_load8","_lt","_max","_memory_grow","_memory_size","_min","_ne","_nearest","_neg","_popcnt","_return","_rotl","_rotr","_sge","_sgt","_sle","_sload","_slt","_sqrt","_sstore","_store","_store16","_store32","_store8","_sub","_trunc","_trunc_f32","_trunc_f64","asm","borrow","","borrow_mut","","call_return","clone","clone_into","clone_to_uninit","cmp","default","deref","deref_mut","dup","embed","float","fmt","from","","handle_empty_return","integer","into","","main_return","memory","memory_write","memory_write_at","memory_write_bytes","mp_offset","offset","pc_offset","push","ret","shift_stack","size","sp","stack","swap","to_owned","try_from","","try_into","","type_id","","Abi","BinaryReader","BufferOverflow","ControlStackUnderflow","DataNotFound","DuplicateFunc","DuplicateJump","Err","Error","ExtFuncNotFound","FuncNotFound","FuncNotImported","HostFuncNotFound","ImportedFuncNotFound","InvalidDataOffset","InvalidDataSize","InvalidDepth","InvalidElseBlock","InvalidFunctionSignature","InvalidLocalIndex","InvalidMP","InvalidPC","InvalidSelector","LabelMismatch","LocalIndexOutOfRange","LocalNotOnStack","MemoryOutOfBounds","Ok","Result","SelectorNotFound","StackIndexOutOfRange","StackNotBalanced","StackOverflow","StackUnderflow","UnsupportedHostFunc","borrow","borrow_mut","fmt","","from","","","into","source","to_string","try_from","try_into","type_id","ValidateThenVisit","borrow","borrow_mut","from","into","try_from","try_into","type_id","validate_then_visit","visit_any_convert_extern","visit_array_copy","visit_array_fill","visit_array_get","visit_array_get_s","visit_array_get_u","visit_array_init_data","visit_array_init_elem","visit_array_len","visit_array_new","visit_array_new_data","visit_array_new_default","visit_array_new_elem","visit_array_new_fixed","visit_array_set","visit_atomic_fence","visit_block","visit_br","visit_br_if","visit_br_on_cast","visit_br_on_cast_fail","visit_br_on_non_null","visit_br_on_null","visit_br_table","visit_call","visit_call_indirect","visit_call_ref","visit_catch","visit_catch_all","visit_data_drop","visit_delegate","visit_drop","visit_elem_drop","visit_else","visit_end","visit_extern_convert_any","visit_f32_abs","visit_f32_add","visit_f32_ceil","visit_f32_const","visit_f32_convert_i32_s","visit_f32_convert_i32_u","visit_f32_convert_i64_s","visit_f32_convert_i64_u","visit_f32_copysign","visit_f32_demote_f64","visit_f32_div","visit_f32_eq","visit_f32_floor","visit_f32_ge","visit_f32_gt","visit_f32_le","visit_f32_load","visit_f32_lt","visit_f32_max","visit_f32_min","visit_f32_mul","visit_f32_ne","visit_f32_nearest","visit_f32_neg","visit_f32_reinterpret_i32","visit_f32_sqrt","visit_f32_store","visit_f32_sub","visit_f32_trunc","visit_f32x4_abs","visit_f32x4_add","visit_f32x4_ceil","visit_f32x4_convert_i32x4_s","visit_f32x4_convert_i32x4_u","visit_f32x4_demote_f64x2_zero","visit_f32x4_div","visit_f32x4_eq","visit_f32x4_extract_lane","visit_f32x4_floor","visit_f32x4_ge","visit_f32x4_gt","visit_f32x4_le","visit_f32x4_lt","visit_f32x4_max","visit_f32x4_min","visit_f32x4_mul","visit_f32x4_ne","visit_f32x4_nearest","visit_f32x4_neg","visit_f32x4_pmax","visit_f32x4_pmin","visit_f32x4_relaxed_madd","visit_f32x4_relaxed_max","visit_f32x4_relaxed_min","visit_f32x4_relaxed_nmadd","visit_f32x4_replace_lane","visit_f32x4_splat","visit_f32x4_sqrt","visit_f32x4_sub","visit_f32x4_trunc","visit_f64_abs","visit_f64_add","visit_f64_ceil","visit_f64_const","visit_f64_convert_i32_s","visit_f64_convert_i32_u","visit_f64_convert_i64_s","visit_f64_convert_i64_u","visit_f64_copysign","visit_f64_div","visit_f64_eq","visit_f64_floor","visit_f64_ge","visit_f64_gt","visit_f64_le","visit_f64_load","visit_f64_lt","visit_f64_max","visit_f64_min","visit_f64_mul","visit_f64_ne","visit_f64_nearest","visit_f64_neg","visit_f64_promote_f32","visit_f64_reinterpret_i64","visit_f64_sqrt","visit_f64_store","visit_f64_sub","visit_f64_trunc","visit_f64x2_abs","visit_f64x2_add","visit_f64x2_ceil","visit_f64x2_convert_low_i32x4_s","visit_f64x2_convert_low_i32x4_u","visit_f64x2_div","visit_f64x2_eq","visit_f64x2_extract_lane","visit_f64x2_floor","visit_f64x2_ge","visit_f64x2_gt","visit_f64x2_le","visit_f64x2_lt","visit_f64x2_max","visit_f64x2_min","visit_f64x2_mul","visit_f64x2_ne","visit_f64x2_nearest","visit_f64x2_neg","visit_f64x2_pmax","visit_f64x2_pmin","visit_f64x2_promote_low_f32x4","visit_f64x2_relaxed_madd","visit_f64x2_relaxed_max","visit_f64x2_relaxed_min","visit_f64x2_relaxed_nmadd","visit_f64x2_replace_lane","visit_f64x2_splat","visit_f64x2_sqrt","visit_f64x2_sub","visit_f64x2_trunc","visit_global_get","visit_global_set","visit_i16x8_abs","visit_i16x8_add","visit_i16x8_add_sat_s","visit_i16x8_add_sat_u","visit_i16x8_all_true","visit_i16x8_avgr_u","visit_i16x8_bitmask","visit_i16x8_eq","visit_i16x8_extadd_pairwise_i8x16_s","visit_i16x8_extadd_pairwise_i8x16_u","visit_i16x8_extend_high_i8x16_s","visit_i16x8_extend_high_i8x16_u","visit_i16x8_extend_low_i8x16_s","visit_i16x8_extend_low_i8x16_u","visit_i16x8_extmul_high_i8x16_s","visit_i16x8_extmul_high_i8x16_u","visit_i16x8_extmul_low_i8x16_s","visit_i16x8_extmul_low_i8x16_u","visit_i16x8_extract_lane_s","visit_i16x8_extract_lane_u","visit_i16x8_ge_s","visit_i16x8_ge_u","visit_i16x8_gt_s","visit_i16x8_gt_u","visit_i16x8_le_s","visit_i16x8_le_u","visit_i16x8_lt_s","visit_i16x8_lt_u","visit_i16x8_max_s","visit_i16x8_max_u","visit_i16x8_min_s","visit_i16x8_min_u","visit_i16x8_mul","visit_i16x8_narrow_i32x4_s","visit_i16x8_narrow_i32x4_u","visit_i16x8_ne","visit_i16x8_neg","visit_i16x8_q15mulr_sat_s","visit_i16x8_relaxed_dot_i8x16_i7x16_s","visit_i16x8_relaxed_laneselect","visit_i16x8_relaxed_q15mulr_s","visit_i16x8_replace_lane","visit_i16x8_shl","visit_i16x8_shr_s","visit_i16x8_shr_u","visit_i16x8_splat","visit_i16x8_sub","visit_i16x8_sub_sat_s","visit_i16x8_sub_sat_u","visit_i31_get_s","visit_i31_get_u","visit_i32_add","visit_i32_and","visit_i32_atomic_load","visit_i32_atomic_load16_u","visit_i32_atomic_load8_u","visit_i32_atomic_rmw16_add_u","visit_i32_atomic_rmw16_and_u","visit_i32_atomic_rmw16_cmpxchg_u","visit_i32_atomic_rmw16_or_u","visit_i32_atomic_rmw16_sub_u","visit_i32_atomic_rmw16_xchg_u","visit_i32_atomic_rmw16_xor_u","visit_i32_atomic_rmw8_add_u","visit_i32_atomic_rmw8_and_u","visit_i32_atomic_rmw8_cmpxchg_u","visit_i32_atomic_rmw8_or_u","visit_i32_atomic_rmw8_sub_u","visit_i32_atomic_rmw8_xchg_u","visit_i32_atomic_rmw8_xor_u","visit_i32_atomic_rmw_add","visit_i32_atomic_rmw_and","visit_i32_atomic_rmw_cmpxchg","visit_i32_atomic_rmw_or","visit_i32_atomic_rmw_sub","visit_i32_atomic_rmw_xchg","visit_i32_atomic_rmw_xor","visit_i32_atomic_store","visit_i32_atomic_store16","visit_i32_atomic_store8","visit_i32_clz","visit_i32_const","visit_i32_ctz","visit_i32_div_s","visit_i32_div_u","visit_i32_eq","visit_i32_eqz","visit_i32_extend16_s","visit_i32_extend8_s","visit_i32_ge_s","visit_i32_ge_u","visit_i32_gt_s","visit_i32_gt_u","visit_i32_le_s","visit_i32_le_u","visit_i32_load","visit_i32_load16_s","visit_i32_load16_u","visit_i32_load8_s","visit_i32_load8_u","visit_i32_lt_s","visit_i32_lt_u","visit_i32_mul","visit_i32_ne","visit_i32_or","visit_i32_popcnt","visit_i32_reinterpret_f32","visit_i32_rem_s","visit_i32_rem_u","visit_i32_rotl","visit_i32_rotr","visit_i32_shl","visit_i32_shr_s","visit_i32_shr_u","visit_i32_store","visit_i32_store16","visit_i32_store8","visit_i32_sub","visit_i32_trunc_f32_s","visit_i32_trunc_f32_u","visit_i32_trunc_f64_s","visit_i32_trunc_f64_u","visit_i32_trunc_sat_f32_s","visit_i32_trunc_sat_f32_u","visit_i32_trunc_sat_f64_s","visit_i32_trunc_sat_f64_u","visit_i32_wrap_i64","visit_i32_xor","visit_i32x4_abs","visit_i32x4_add","visit_i32x4_all_true","visit_i32x4_bitmask","visit_i32x4_dot_i16x8_s","visit_i32x4_eq","visit_i32x4_extadd_pairwise_i16x8_s","visit_i32x4_extadd_pairwise_i16x8_u","visit_i32x4_extend_high_i16x8_s","visit_i32x4_extend_high_i16x8_u","visit_i32x4_extend_low_i16x8_s","visit_i32x4_extend_low_i16x8_u","visit_i32x4_extmul_high_i16x8_s","visit_i32x4_extmul_high_i16x8_u","visit_i32x4_extmul_low_i16x8_s","visit_i32x4_extmul_low_i16x8_u","visit_i32x4_extract_lane","visit_i32x4_ge_s","visit_i32x4_ge_u","visit_i32x4_gt_s","visit_i32x4_gt_u","visit_i32x4_le_s","visit_i32x4_le_u","visit_i32x4_lt_s","visit_i32x4_lt_u","visit_i32x4_max_s","visit_i32x4_max_u","visit_i32x4_min_s","visit_i32x4_min_u","visit_i32x4_mul","visit_i32x4_ne","visit_i32x4_neg","visit_i32x4_relaxed_dot_i8x16_i7x16_add_s","visit_i32x4_relaxed_laneselect","visit_i32x4_relaxed_trunc_f32x4_s","visit_i32x4_relaxed_trunc_f32x4_u","visit_i32x4_relaxed_trunc_f64x2_s_zero","visit_i32x4_relaxed_trunc_f64x2_u_zero","visit_i32x4_replace_lane","visit_i32x4_shl","visit_i32x4_shr_s","visit_i32x4_shr_u","visit_i32x4_splat","visit_i32x4_sub","visit_i32x4_trunc_sat_f32x4_s","visit_i32x4_trunc_sat_f32x4_u","visit_i32x4_trunc_sat_f64x2_s_zero","visit_i32x4_trunc_sat_f64x2_u_zero","visit_i64_add","visit_i64_and","visit_i64_atomic_load","visit_i64_atomic_load16_u","visit_i64_atomic_load32_u","visit_i64_atomic_load8_u","visit_i64_atomic_rmw16_add_u","visit_i64_atomic_rmw16_and_u","visit_i64_atomic_rmw16_cmpxchg_u","visit_i64_atomic_rmw16_or_u","visit_i64_atomic_rmw16_sub_u","visit_i64_atomic_rmw16_xchg_u","visit_i64_atomic_rmw16_xor_u","visit_i64_atomic_rmw32_add_u","visit_i64_atomic_rmw32_and_u","visit_i64_atomic_rmw32_cmpxchg_u","visit_i64_atomic_rmw32_or_u","visit_i64_atomic_rmw32_sub_u","visit_i64_atomic_rmw32_xchg_u","visit_i64_atomic_rmw32_xor_u","visit_i64_atomic_rmw8_add_u","visit_i64_atomic_rmw8_and_u","visit_i64_atomic_rmw8_cmpxchg_u","visit_i64_atomic_rmw8_or_u","visit_i64_atomic_rmw8_sub_u","visit_i64_atomic_rmw8_xchg_u","visit_i64_atomic_rmw8_xor_u","visit_i64_atomic_rmw_add","visit_i64_atomic_rmw_and","visit_i64_atomic_rmw_cmpxchg","visit_i64_atomic_rmw_or","visit_i64_atomic_rmw_sub","visit_i64_atomic_rmw_xchg","visit_i64_atomic_rmw_xor","visit_i64_atomic_store","visit_i64_atomic_store16","visit_i64_atomic_store32","visit_i64_atomic_store8","visit_i64_clz","visit_i64_const","visit_i64_ctz","visit_i64_div_s","visit_i64_div_u","visit_i64_eq","visit_i64_eqz","visit_i64_extend16_s","visit_i64_extend32_s","visit_i64_extend8_s","visit_i64_extend_i32_s","visit_i64_extend_i32_u","visit_i64_ge_s","visit_i64_ge_u","visit_i64_gt_s","visit_i64_gt_u","visit_i64_le_s","visit_i64_le_u","visit_i64_load","visit_i64_load16_s","visit_i64_load16_u","visit_i64_load32_s","visit_i64_load32_u","visit_i64_load8_s","visit_i64_load8_u","visit_i64_lt_s","visit_i64_lt_u","visit_i64_mul","visit_i64_ne","visit_i64_or","visit_i64_popcnt","visit_i64_reinterpret_f64","visit_i64_rem_s","visit_i64_rem_u","visit_i64_rotl","visit_i64_rotr","visit_i64_shl","visit_i64_shr_s","visit_i64_shr_u","visit_i64_store","visit_i64_store16","visit_i64_store32","visit_i64_store8","visit_i64_sub","visit_i64_trunc_f32_s","visit_i64_trunc_f32_u","visit_i64_trunc_f64_s","visit_i64_trunc_f64_u","visit_i64_trunc_sat_f32_s","visit_i64_trunc_sat_f32_u","visit_i64_trunc_sat_f64_s","visit_i64_trunc_sat_f64_u","visit_i64_xor","visit_i64x2_abs","visit_i64x2_add","visit_i64x2_all_true","visit_i64x2_bitmask","visit_i64x2_eq","visit_i64x2_extend_high_i32x4_s","visit_i64x2_extend_high_i32x4_u","visit_i64x2_extend_low_i32x4_s","visit_i64x2_extend_low_i32x4_u","visit_i64x2_extmul_high_i32x4_s","visit_i64x2_extmul_high_i32x4_u","visit_i64x2_extmul_low_i32x4_s","visit_i64x2_extmul_low_i32x4_u","visit_i64x2_extract_lane","visit_i64x2_ge_s","visit_i64x2_gt_s","visit_i64x2_le_s","visit_i64x2_lt_s","visit_i64x2_mul","visit_i64x2_ne","visit_i64x2_neg","visit_i64x2_relaxed_laneselect","visit_i64x2_replace_lane","visit_i64x2_shl","visit_i64x2_shr_s","visit_i64x2_shr_u","visit_i64x2_splat","visit_i64x2_sub","visit_i8x16_abs","visit_i8x16_add","visit_i8x16_add_sat_s","visit_i8x16_add_sat_u","visit_i8x16_all_true","visit_i8x16_avgr_u","visit_i8x16_bitmask","visit_i8x16_eq","visit_i8x16_extract_lane_s","visit_i8x16_extract_lane_u","visit_i8x16_ge_s","visit_i8x16_ge_u","visit_i8x16_gt_s","visit_i8x16_gt_u","visit_i8x16_le_s","visit_i8x16_le_u","visit_i8x16_lt_s","visit_i8x16_lt_u","visit_i8x16_max_s","visit_i8x16_max_u","visit_i8x16_min_s","visit_i8x16_min_u","visit_i8x16_narrow_i16x8_s","visit_i8x16_narrow_i16x8_u","visit_i8x16_ne","visit_i8x16_neg","visit_i8x16_popcnt","visit_i8x16_relaxed_laneselect","visit_i8x16_relaxed_swizzle","visit_i8x16_replace_lane","visit_i8x16_shl","visit_i8x16_shr_s","visit_i8x16_shr_u","visit_i8x16_shuffle","visit_i8x16_splat","visit_i8x16_sub","visit_i8x16_sub_sat_s","visit_i8x16_sub_sat_u","visit_i8x16_swizzle","visit_if","visit_local_get","visit_local_set","visit_local_tee","visit_loop","visit_memory_atomic_notify","visit_memory_atomic_wait32","visit_memory_atomic_wait64","visit_memory_copy","visit_memory_discard","visit_memory_fill","visit_memory_grow","visit_memory_init","visit_memory_size","visit_nop","visit_op_when_unreachable","visit_ref_as_non_null","visit_ref_cast_non_null","visit_ref_cast_nullable","visit_ref_eq","visit_ref_func","visit_ref_i31","visit_ref_is_null","visit_ref_null","visit_ref_test_non_null","visit_ref_test_nullable","visit_rethrow","visit_return","visit_return_call","visit_return_call_indirect","visit_return_call_ref","visit_select","visit_struct_get","visit_struct_get_s","visit_struct_get_u","visit_struct_new","visit_struct_new_default","visit_struct_set","visit_table_copy","visit_table_fill","visit_table_get","visit_table_grow","visit_table_init","visit_table_set","visit_table_size","visit_throw","visit_throw_ref","visit_try","visit_try_table","visit_typed_select","visit_unreachable","visit_v128_and","visit_v128_andnot","visit_v128_any_true","visit_v128_bitselect","visit_v128_const","visit_v128_load","visit_v128_load16_lane","visit_v128_load16_splat","visit_v128_load16x4_s","visit_v128_load16x4_u","visit_v128_load32_lane","visit_v128_load32_splat","visit_v128_load32_zero","visit_v128_load32x2_s","visit_v128_load32x2_u","visit_v128_load64_lane","visit_v128_load64_splat","visit_v128_load64_zero","visit_v128_load8_lane","visit_v128_load8_splat","visit_v128_load8x8_s","visit_v128_load8x8_u","visit_v128_not","visit_v128_or","visit_v128_store","visit_v128_store16_lane","visit_v128_store32_lane","visit_v128_store64_lane","visit_v128_store8_lane","visit_v128_xor","call","control","handlers","impl_visit_operator","local","log","map_wasm_operators","Data","EmitABI","Env","Evm","Exports","Function","Functions","HostFunc","Imports","NoOp","Output","ToLSBytes","Type","abi","body","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","data","","default","","","deref","","deref_mut","","exports","fmt","","","from","","","func","host","impl_deref","imports","into","","","is_emit_abi","selectors","size","to_ls_bytes","to_owned","","","try_from","","","try_into","","","type_id","","","validator","ALIGNMENT_MASK","Output","ToLSBytes","Type","align","","offset","size","to_ls_bytes","Data","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","fmt","from","into","load","to_owned","try_from","try_into","type_id","Function","Functions","add","body","borrow","","borrow_mut","","default","deref","deref_mut","drain_selectors","from","","index","into","","into_funcs","sig","try_from","","try_into","","type_id","","validator","EmitABI","Evm","HostFunc","NoOp","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","eq","equivalent","","","fmt","from","into","partial_cmp","stack_in","stack_out","to_owned","try_from","","try_into","type_id"],"q":[[0,"zingen"],[98,"zingen::asm"],[267,"zingen::backtrace"],[281,"zingen::codegen"],[291,"zingen::codegen::code"],[335,"zingen::codegen::constructor"],[354,"zingen::codegen::dispatcher"],[374,"zingen::codegen::function"],[994,"zingen::control"],[1051,"zingen::jump"],[1078,"zingen::jump::relocate"],[1080,"zingen::jump::table"],[1112,"zingen::local"],[1160,"zingen::masm"],[1266,"zingen::result"],[1314,"zingen::validator"],[1896,"zingen::visitor"],[1903,"zingen::wasm"],[1973,"zingen::wasm::abi"],[1982,"zingen::wasm::data"],[1999,"zingen::wasm::func"],[2025,"zingen::wasm::host"],[2051,"evm_opcodes::shanghai"],[2052,"core::fmt"],[2053,"core::result"],[2054,"core::any"],[2055,"alloc::vec"],[2056,"core::convert"],[2057,"core::hash"],[2058,"core::option"],[2059,"wasmparser::readers::core::types"],[2060,"zabi"],[2061,"wasmparser::readers::core::operators"],[2062,"wasmparser::readers::core::code"],[2063,"wasmparser::validator::core"],[2064,"wasmparser::validator::func"],[2065,"smallvec"],[2066,"core::ops::function"],[2067,"zabi::result"],[2068,"wasmparser::binary_reader"],[2069,"core::error"],[2070,"alloc::string"],[2071,"core::cmp"]],"i":"Hj``0G``1`````11`110j`222`212`222222222`222``1`20`222222Cf`0H``DhdCn``24204Bf2GjGf5`3`5`5Cb53Ef0`063Gb:8814````7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777`7777777777`B`000000000000````````````6Bh7007070707000077070770707777700707707070``44444444444444444`<<<<<<<<<<<<<<<<<<<````>>>>32>32>3>3>322>>>>>>32>32223333223322>3>32>3223>32Gd0``0000000000000000```0000```9999999999999999999999999999999```Gh00870877000008708777870877787788087087880878``============================================================Hb>0>>>>>`>>>>``>0>>`0>>`>>>>0>>`>0>`>>0>0>0>Hj000000j`1111111111111111110`1111111111111111111`Id000000`000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000````````Jf`0`````0J````ChIlInDb210210210210`021021210210210```021021Hd53213213213214`5``00`05`Jb000000000000000``Cl6606000006066006606060688`88888888888888888888888","f":"```````````````````````````````````````````````````````````````````````````````````````````````````{{{f{bd}}}{{j{h}}}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{d}}}{{f{{n{l}}}}}}`{{{f{bd}}}{{f{bA`}}}}{{{f{d}}}d}{{f{f{bc}}}h{}}{fh}{{{f{bd}}Ab}{{j{h}}}}{{{f{bd}}l}{{j{h}}}}{{}d}{{{f{bd}}l}h}{{{f{bd}}Ad}{{j{h}}}}{{{f{bd}}{f{{n{l}}}}}h}{{{f{d}}{f{bAf}}}Ah}{cc{}}``{{{f{bd}}Aj}h}87{{}c{}}``{fc{}}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{fAn}`{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{}B`}{{{f{B`}}{f{bAf}}}Ah}:`8{{{f{bB`}}}{{Bb{l}}}}{{{f{bB`}}Ab}{{Bb{{Bb{l}}}}}}{{{f{bB`}}c}h{{Bd{{n{l}}}}}}987````````````6655`{{{f{Bf}}}Bf}{{{f{Bh}}}Bh}{{f{f{bc}}}h{}}0{fh}0{{}Bf}{{{f{Bh}}{f{Bh}}}Bj}{{f{f{c}}}Bj{}}00{{{f{Bf}}}{{Bb{l}}}}{{{f{Bf}}{f{bAf}}}Ah}{{{f{Bh}}{f{bAf}}}Ah}{cc{}}0{{{f{Bf}}}{{Bb{Bh}}}}`{{{f{Bh}}{f{bc}}}hBl}{{}c{}}09{{{f{Bf}}}Ab}`{{{f{Bf}}{f{Bh}}}{{C`{Bn}}}}{{{f{bBf}}Bn}h}``{fc{}}0{{{f{bBf}}Bh}h}{c{{Al{e}}}{}{}}0{{}{{Al{c}}}{}}0{fAn}0``{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{Cb}}}Cb}{{f{f{bc}}}h{}}{fh}{{}Cb}{{{f{Cb}}A`}{{j{A`}}}}{{{f{Cb}}{f{bAf}}}Ah}{cc{}}{{}c{}}`{{AbAb}Ab}{{{f{bCb}}Cd}{{j{h}}}}{fc{}}?>=```<;{{{f{bCf}}{f{Ch}}Bj}{{j{h}}}}`{{{f{bCf}}{f{Cj}}}{{j{h}}}}{{{f{bCf}}Cl{f{bCn}}}{{j{{Bb{l}}}}}}7`6{{{f{bCf}}{f{Ch}}}{{j{D`}}}}{{Db{f{Cl}}}{{j{Cf}}}}{{{f{bCf}}AbBj}{{j{Bj}}}}{{{f{Cf}}{f{Dd}}}{{j{Df}}}}`{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{fAn}`{{{f{bDh}}Dj}{{j{h}}}}{{{f{bDh}}Df}{{j{h}}}}0{{{f{bDh}}Dl}{{j{h}}}}1{{{f{bDh}}DfDfl}{{j{h}}}}{{{f{bDh}}}{{j{h}}}}03343{{{f{bDh}}Ab}{{j{h}}}}0445111`{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}66`{{{f{bDh}}{f{bDn}}{f{b{Eb{E`}}}}}{{j{h}}}}{{{f{bDh}}{f{bEd}}{f{b{Eb{E`}}}}}{{j{h}}}}`{{Dh{f{bCn}}Bn}{{j{A`}}}}{cc{}}7{{{f{bDh}}Ef}{{j{h}}}}{{{f{bDh}}Bn}{{j{h}}}}9{{}c{}}``9{{{f{bDh}}}{{j{{Ej{EhEh}}}}}}`{{DbCjBj}{{j{Dh}}}}`{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}`{fAn}{{{f{bDh}}}c{}}{{{f{bDh}}DfDf}c{}}{{{f{bDh}}Df}c{}}0001120101102{{{f{bDh}}Dj}c{}}11{{{f{bDh}}DfElEl}c{}}022{{{f{bDh}}Dl}c{}}3{{{f{bDh}}DfDfl}c{}}4464464666666{{{f{bDh}}En}c{}}777777777777{{{f{bDh}}F`}c{}}88888888808888888888{{{f{bDh}}l}c{}}9999999999999999909999999{{{f{bDh}}Fb}c{}}:::::::::::2::::::::::2:::::::::1::::::::::::::::::1::::88::::::::::::::::::11:::::::::::::::::::::1:::::::::::222222222222222222222222222:{{{f{bDh}}Eh}c{}};;;;;;;;;;;;;33333;;;;;;;;;;;;;;333;;;;;;;;;;;;;;;;;;;;;;;;;;;2;;;;;;;;;;;;;;;;;;;;;2;;;;;;;;;;;333333333333333333333333333333333333;{{{f{bDh}}Fd}c{}}<<<<<<<<<<<<<<<<4444444<<<<<<<<<<<<<<4444<<<<<<<<<<<<<<<<<<<<<<<3<<<<<<<<3<<<<<<<<<<<<<33<<<<<<<<<<<<<<<<<<<3<<<{{{f{bDh}}{Ff{l}}}c{}}=====:;;;:555<;;{{{f{bDh}}Dfl}c{}}=0>>{{{f{bDh}}Fh}c{}}0?=??000=?=>=?>>>==>>===>===?<{{{f{bDh}}Fj}c{}}{{{f{bDh}}Fl}c{}}{{{f{bDh}}}c{}}0000{{{f{bDh}}Fn}c{}};{{{f{bDh}}F`l}c{}}<<<0<<<<0<<0<<<22<00002```````{f{{f{c}}}{}}00{{{f{b}}}{{f{bc}}}{}}00{{{f{G`}}}G`}{{{f{Ef}}}Ef}{{f{f{bc}}}h{}}0{fh}0{{}Gb}{{{f{Gb}}}Ab}{{{f{G`}}{f{G`}}}Bj}{{f{f{c}}}Bj{}}00{{{f{G`}}{f{bAf}}}Ah}{cc{}}00{{}c{}}00{{{f{Gb}}Df}{{j{Bn}}}}{{{f{bGb}}}{{j{Ef}}}}{{G`BnlDj}Ef}``{{{f{Ef}}}Bn}2{{{f{bGb}}Ef}h}{{{f{Ef}}}Dj}`{{{f{Gb}}Ab}{{j{Dj}}}}`{fc{}}0{c{{Al{e}}}{}{}}00{{}{{Al{c}}}{}}00{{{f{Gb}}Ab}{{j{G`}}}}`{fAn}00``````{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{Gd}}}Gd}{{f{f{bc}}}h{}}{fh}{{{f{Gd}}{f{Gd}}}Bj}{{f{f{c}}}Bj{}}00{{{f{Gd}}{f{bAf}}}Ah}{cc{}}{{}c{}}{{{f{Gd}}}Bj}0```?>=;{Bn{{j{Bn}}}}{{{f{bA`}}BnBnBn}{{j{h}}}}`<;{{{f{bCn}}BnDf}h}{{{f{bCn}}DfBn}{{j{h}}}}{{{f{Cn}}}Cn}<;`{{{f{bCn}}Bn}h}{{}Cn}{{{f{bCn}}BnBh}h}{{{f{Cn}}{f{bAf}}}Ah};`:`{{{f{bCn}}BnBn}h}{{{f{bCn}}CnBn}{{j{h}}}}1{{{f{bCn}}{f{bA`}}}{{j{h}}}}{{{f{bCn}}BnBn}{{j{h}}}}0000{{{f{bCn}}}{{j{h}}}}{{{f{bCn}}{f{Gd}}}{{j{Bn}}}}{fc{}}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{fAn}`````{f{{f{c}}}{}}00{{{f{b}}}{{f{bc}}}{}}00{{}Gf}{{{f{Gh}}{f{Gh}}}Bj}{{f{f{c}}}Bj{}}00{{{f{Gh}}{f{bAf}}}Ah}{{{f{Gj}}{f{bAf}}}Ah}{{{f{Gf}}{f{bAf}}}Ah}{cc{}}00{{{f{Gf}}Ab}{{j{{f{Gj}}}}}}{{{f{bGf}}Ab}{{j{{f{bGj}}}}}}``{{}c{}}00{{{f{Gf}}}Bj}{{{f{Gf}}}Ab}{{FlGhAb}Gj}{{{f{Gf}}Ab}{{j{{Gl{{Ff{l}}}}}}}}{{{f{bGf}}c}h{{Gn{Gj}}}}{{{f{Gj}}}Ab}`{c{{Al{e}}}{}{}}00{{}{{Al{c}}}{}}00{{{f{Gj}}}{{f{Gh}}}}`{fAn}00{{{f{Gj}}}{{f{Fl}}}}``{{{f{bH`}}}{{j{h}}}}0000000000{{{f{bH`}}En}{{j{h}}}}11{{{f{bH`}}Fb}{{j{h}}}}22222{{{f{bH`}}Eh}{{j{h}}}}33{{{f{bH`}}Fd}{{j{h}}}}4444444444{{{f{bH`}}Dfl}{{j{h}}}}055555555555555555555555`{f{{f{c}}}{}}0{{{f{b}}}{{f{bc}}}{}}0{{{f{bH`}}{f{{n{Fl}}}}}{{j{h}}}}{{{f{H`}}}H`}{{f{f{bc}}}h{}}{fh}`{{}H`}{{{f{H`}}}{{f{c}}}{}}{{{f{bH`}}}{{f{bc}}}{}}{{{f{bH`}}l}{{j{h}}}}``{{{f{H`}}{f{bAf}}}Ah}{cc{}}0{{{f{bH`}}}{{j{h}}}}`{{}c{}}0;`{{{f{bH`}}c}{{j{Hb}}}Hd}{{{f{bH`}}{f{{n{l}}}}}{{j{h}}}}{{{f{bH`}}{f{{n{l}}}}}{{j{Hb}}}}{{{f{H`}}c}{{j{{Gl{{Ff{l}}}}}}}{{Hh{Ab}{{Hf{{j{Ab}}}}}}}}`{{{f{H`}}}Bn}3`{{{f{bH`}}lBj}{{j{h}}}}`{{{f{H`}}}l}`;{fc{}}{c{{Al{e}}}{}{}}0{{}{{Al{c}}}{}}0{fAn}0```````````````````````````````````{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{Hj}}{f{bAf}}}Ah}0{HlHj}{HnHj}{cc{}}{{}c{}}{{{f{Hj}}}{{C`{{f{I`}}}}}}{fIb};:9`8732;:9`{{{f{b{Id{c}}}}}e{{Ih{}{{Hf{{If{h}}}}}}}{}}{{{f{b{Id{c}}}}DfDf}e{{Ih{}{{Hf{{If{h}}}}}}}{}}{{{f{b{Id{c}}}}Df}e{{Ih{}{{Hf{{If{h}}}}}}}{}}0001120101102{{{f{b{Id{c}}}}Dj}e{{Ih{}{{Hf{{If{h}}}}}}}{}}11{{{f{b{Id{c}}}}DfElEl}e{{Ih{}{{Hf{{If{h}}}}}}}{}}022{{{f{b{Id{c}}}}Dl}e{{Ih{}{{Hf{{If{h}}}}}}}{}}3{{{f{b{Id{c}}}}DfDfl}e{{Ih{}{{Hf{{If{h}}}}}}}{}}4464464666666{{{f{b{Id{c}}}}En}e{{Ih{}{{Hf{{If{h}}}}}}}{}}777777777777{{{f{b{Id{c}}}}F`}e{{Ih{}{{Hf{{If{h}}}}}}}{}}88888888808888888888{{{f{b{Id{c}}}}l}e{{Ih{}{{Hf{{If{h}}}}}}}{}}9999999999999999909999999{{{f{b{Id{c}}}}Fb}e{{Ih{}{{Hf{{If{h}}}}}}}{}}:::::::::::2::::::::::2:::::::::1::::::::::::::::::1::::88::::::::::::::::::11:::::::::::::::::::::1:::::::::::222222222222222222222222222:{{{f{b{Id{c}}}}Eh}e{{Ih{}{{Hf{{If{h}}}}}}}{}};;;;;;;;;;;;;33333;;;;;;;;;;;;;;333;;;;;;;;;;;;;;;;;;;;;;;;;;;2;;;;;;;;;;;;;;;;;;;;;2;;;;;;;;;;;333333333333333333333333333333333333;{{{f{b{Id{c}}}}Fd}e{{Ih{}{{Hf{{If{h}}}}}}}{}}<<<<<<<<<<<<<<<<4444444<<<<<<<<<<<<<<4444<<<<<<<<<<<<<<<<<<<<<<<3<<<<<<<<3<<<<<<<<<<<<<33<<<<<<<<<<<<<<<<<<<3<<<{{{f{b{Id{c}}}}{Ff{l}}}e{{Ih{}{{Hf{{If{h}}}}}}}{}}=====:;;;:555<;;{{{f{b{Id{c}}}}Dfl}e{{Ih{}{{Hf{{If{h}}}}}}}{}}=0>{IjBj}?{{{f{b{Id{c}}}}Fh}e{{Ih{}{{Hf{{If{h}}}}}}}{}}0{{{f{b{Id{c}}}}}e{{Ih{}{{Hf{{If{h}}}}}}}{}}?00111?0?{{{f{b{Id{c}}}}DfDf}e{{Ih{}{{Hf{{If{h}}}}}}}{}}{{{f{b{Id{c}}}}Df}e{{Ih{}{{Hf{{If{h}}}}}}}{}}2111001100010002{{{f{b{Id{c}}}}Dj}e{{Ih{}{{Hf{{If{h}}}}}}}{}}{{{f{b{Id{c}}}}Fj}e{{Ih{}{{Hf{{If{h}}}}}}}{}}{{{f{b{Id{c}}}}Fl}e{{Ih{}{{Hf{{If{h}}}}}}}{}}55555{{{f{b{Id{c}}}}Fn}e{{Ih{}{{Hf{{If{h}}}}}}}{}}?{{{f{b{Id{c}}}}F`l}e{{Ih{}{{Hf{{If{h}}}}}}}{}}{{{f{b{Id{c}}}}F`}e{{Ih{}{{Hf{{If{h}}}}}}}{}}0010000100100088011118``````````````````````{f{{f{c}}}{}}00{{{f{b}}}{{f{bc}}}{}}00{{{f{Il}}}Il}{{{f{In}}}In}{{{f{Db}}}Db}{{f{f{bc}}}h{}}00{fh}00``{{}Il}{{}In}{{}Db}{{{f{Il}}}{{f{c}}}{}}{{{f{In}}}{{f{c}}}{}}{{{f{bIl}}}{{f{bc}}}{}}{{{f{bIn}}}{{f{bc}}}{}}`{{{f{Il}}{f{bAf}}}Ah}{{{f{In}}{f{bAf}}}Ah}{{{f{Db}}{f{bAf}}}Ah}{cc{}}00````{{}c{}}00{{{f{Il}}Df}Bj}{{{f{In}}}{{Bb{Df}}}}{{{f{Hd}}}Ab}{{{f{{J`{}{{Hf{c}}}}}}}c{{Bd{{n{l}}}}}}{fc{}}00{c{{Al{e}}}{}{}}00{{}{{Al{c}}}{}}00{fAn}00`````55`54`{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{Jb}}}Jb}{{f{f{bc}}}h{}}{fh}{{}Jb}{{{f{Jb}}}{{f{c}}}{}}{{{f{bJb}}}{{f{bc}}}{}}{{{f{Jb}}{f{bAf}}}Ah}{cc{}}{{}c{}}{{{f{Jb}}EhAb}{{j{{Bb{l}}}}}}?>=<``{{{f{bCl}}{Eb{E`}}Jd}h}`<<;;{{}Cl}{{{f{Cl}}}{{f{c}}}{}}{{{f{bCl}}}{{f{bc}}}{}}{{{f{bCl}}{f{In}}}Cl}77{{{f{Ch}}}Df}77{Cl{{Bb{Ch}}}}{{{f{Ch}}}{{j{Cj}}}}{c{{Al{e}}}{}{}}0{{}{{Al{c}}}{}}0{fAn}0`````{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{Jf}}}Jf}{{f{f{bc}}}h{}}{fh}{{{f{Jf}}{f{Jf}}}Jh}{{f{f{c}}}Jh{}}{{{f{Jf}}{f{Jf}}}Bj}{{f{f{c}}}Bj{}}00{{{f{Jf}}{f{bAf}}}Ah}{cc{}}{{}c{}}{{{f{Jf}}{f{Jf}}}{{C`{Jh}}}}{{{f{Jf}}}l}0{fc{}}{c{{Al{e}}}{}{}}{{{Ej{{f{Dd}}{f{Dd}}}}}{{j{Jf}}}}{{}{{Al{c}}}{}}{fAn}","D":"DOb","p":[[0,"mut"],[5,"Assembler",98],[1,"reference"],[1,"unit"],[8,"Result",1266],[1,"u8"],[1,"slice"],[8,"Buffer",0],[1,"usize"],[6,"ShangHai",2051],[5,"Formatter",2052],[8,"Result",2052],[1,"u128"],[6,"Result",2053],[5,"TypeId",2054],[5,"Backtrace",267],[5,"Vec",2055],[10,"AsRef",2056],[5,"Code",291],[5,"ExtFunc",291],[1,"bool"],[10,"Hasher",2057],[1,"u16"],[6,"Option",2058],[5,"Constructor",335],[8,"InitStorage",335],[5,"Dispatcher",354],[5,"Function",1999],[5,"FuncType",2059],[5,"Functions",1999],[5,"JumpTable",1080],[5,"Abi",2060],[5,"Env",1903],[1,"str"],[1,"u32"],[5,"Function",374],[6,"BlockType",2061],[5,"BrTable",2061],[5,"LocalsReader",2062],[5,"ValidatorResources",2063],[5,"FuncValidator",2064],[5,"OperatorsReader",2061],[5,"ControlStackFrame",994],[1,"i32"],[1,"tuple"],[5,"RefType",2059],[5,"Ieee32",2061],[5,"MemArg",2061],[5,"Ieee64",2061],[1,"i64"],[1,"array"],[6,"HeapType",2059],[5,"TryTable",2061],[6,"ValType",2059],[5,"V128",2061],[6,"ControlStackFrameType",994],[5,"ControlStack",994],[6,"Jump",1051],[5,"Locals",1112],[6,"LocalSlotType",1112],[5,"LocalSlot",1112],[5,"SmallVec",2065],[10,"Into",2056],[5,"MacroAssembler",1160],[5,"MemoryInfo",1160],[10,"Type",1973],[17,"Output"],[10,"Fn",2066],[6,"Error",1266],[6,"Error",2067],[5,"BinaryReaderError",2068],[10,"Error",2069],[5,"String",2070],[5,"ValidateThenVisit",1314],[8,"Result",2068],[10,"VisitOperator",2061],[6,"Operator",2061],[5,"Imports",1903],[5,"Exports",1903],[10,"ToLSBytes",1973],[5,"Data",1982],[5,"FunctionBody",2062],[6,"HostFunc",2025],[6,"Ordering",2071]],"r":[[1,98],[7,291],[8,335],[9,994],[10,994],[11,994],[14,354],[19,1266],[23,374],[27,335],[37,1080],[41,1112],[42,1112],[44,1160],[47,1266],[281,291],[282,335],[283,354],[284,291],[285,374],[286,335],[1054,1080],[1903,1982],[1908,1999],[1909,1999],[1910,2025],[1914,1973],[1915,1973]],"b":[[1303,"impl-Display-for-Error"],[1304,"impl-Debug-for-Error"],[1305,"impl-From%3CError%3E-for-Error"],[1306,"impl-From%3CBinaryReaderError%3E-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIoFPwBJAAAA8AABAPUAAgD6AAAA/gAAAAEBAAAIAQMADQEDABcBCAAmAQMAKwEKADcBAQA9AQAARwEBAEoBBQBSAQUAWQEAAF8BAwBmAQEAcQEAAHQBAgCNAQEAowEBAKYBPALqAwwA+AMEAA8EBwAZBAIAHwQAACIECQAzBAMAOgQBAD4EAgBDBAAARQQAAFUEAwBeBA0AcgQAAHsEAAB9BAUAhQQCAMcEAwDMBAYA1gQAANoEAADsBAYAFgUFAB4FBAAkBQEAKAVAAn8HDgCQBwYAmAcCAKAHAACpBwsAvAcAAMAHCADMBwMA1AcGAOMHBQDuBwsA/AcAAP8HBAA="}],["zink",{"t":"KKYTTKCCXCMMMCXKQMKTNNNNNNNNNNCHCHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHTKMCM","n":["Asm","Event","","NAME","STORAGE_KEY","Storage","asm","event","external","ffi","get","push","set","storage","","Asm","impl_asm","push","Event","NAME","log0","","log1","","log2","","log3","","log4","","asm","emit_abi","evm","push_i16","push_i32","push_i64","push_i8","push_u16","push_u32","push_u64","push_u8","sload_i16","sload_i32","sload_i64","sload_i8","sload_u16","sload_u32","sload_u64","sload_u8","log0","log1","log2","log3","log4","push0","push1","push10","push11","push12","push13","push14","push15","push16","push17","push18","push19","push2","push20","push21","push22","push23","push24","push25","push26","push27","push28","push29","push3","push30","push31","push32","push4","push5","push6","push7","push8","push9","sload","sstore","STORAGE_KEY","Storage","get","mapping","set"],"q":[[0,"zink"],[15,"zink::asm"],[18,"zink::event"],[30,"zink::ffi"],[33,"zink::ffi::asm"],[49,"zink::ffi::evm"],[89,"zink::storage"],[94,"zink_codegen"]],"i":"```fn`````0b1````0`22222222222```````````````````````````````````````````````````````````1`1`1","f":"``````````{{}cb}{bd}{cdb}````1``{{{h{f}}}d}0{{{h{f}}{h{{l{j}}}}}d}0{{{h{f}}{h{{l{j}}}}{h{{l{j}}}}}d}0{{{h{f}}{h{{l{j}}}}{h{{l{j}}}}{h{{l{j}}}}}d}0{{{h{f}}{h{{l{j}}}}{h{{l{j}}}}{h{{l{j}}}}{h{{l{j}}}}}d}0`````````````````````````````````````````````````````````````7`5","D":"J`","p":[[10,"Asm",15],[1,"unit"],[10,"Event",18],[1,"reference"],[1,"u8"],[1,"slice"],[10,"Storage",89]],"r":[[0,15],[1,18],[2,94],[5,89],[8,94],[14,94]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA4ABAAEAAEAEQAAABQACgBaAAAA"}],["zink_codegen",{"t":"YCXCCXHHJH","n":["Event","event","external","selector","storage","","parse","external","IOTA","parse"],"q":[[0,"zink_codegen"],[6,"zink_codegen::event"],[7,"zink_codegen::selector"],[8,"zink_codegen::storage"],[10,"syn::derive"],[11,"proc_macro"],[12,"syn::item"],[13,"proc_macro2"]],"i":"``````````","f":"``````{bd}{fd}`{hj}","D":"Ab","p":[[5,"DeriveInput",10],[5,"TokenStream",11],[5,"ItemFn",12],[5,"ItemType",12],[5,"TokenStream",13]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAUACQA="}],["zinkc",{"t":"PFPPPFFFPGIPPIOOCNNOCNNNCCOONONNNNOCCONONNNNCFONNONNNNNONNNNFONNNNNNONNNNNONONNNNNNFONNNONNNONNNNNONNNFNNNNNNNNNONNNNNNNNNNNNFNNNONNONONONNNNNNNNPPPPPGPPINNNNNNNNNNNNNNNNH","n":["Anyhow","Artifact","BinaryReader","BufferOverflow","Codegen","Compiler","Config","Constructor","Err","Error","InitStorage","InvalidDataOffset","Ok","Result","abi","","artifact","borrow","borrow_mut","buffer","cli","clone","clone_into","clone_to_uninit","compiler","config","","","default","dispatcher","finish","fmt","from","into","masm","parser","result","runtime_bytecode","storage","table","to_owned","try_from","try_into","type_id","utils","Artifact","abi","borrow","borrow_mut","config","default","deserialize","fmt","from","into","runtime_bytecode","serialize","try_from","try_into","type_id","Compile","abi","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","dispatcher","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","input","into","output","run","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","Compiler","abi","artifact","borrow","borrow_mut","buffer","compile","compile_dispatcher","compile_func","config","default","emit_buffer","from","into","new","table","try_from","try_into","type_id","Config","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","default","deserialize","dispatcher","","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","serialize","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","Parser","borrow","borrow_mut","data","","default","exports","","from","funcs","imports","","into","parse","to_env","to_func_env","try_from","","try_into","type_id","Anyhow","BinaryReader","BufferOverflow","Codegen","Err","Error","InvalidDataOffset","Ok","Result","borrow","borrow_mut","fmt","","from","","","","header","in_current_span","into","source","to_string","try_from","try_into","type_id","wasm_opt"],"q":[[0,"zinkc"],[45,"zinkc::artifact"],[60,"zinkc::cli"],[83,"zinkc::compiler"],[102,"zinkc::config"],[125,"zinkc::parser"],[145,"zinkc::result"],[170,"zinkc::utils"],[171,"zingen::codegen::constructor"],[172,"smallvec"],[173,"zingen::result"],[174,"core::result"],[175,"core::fmt"],[176,"std::collections::hash::map"],[177,"core::any"],[178,"serde::de"],[179,"serde::ser"],[180,"clap_builder::builder::command"],[181,"clap_builder::parser::matches::arg_matches"],[182,"clap_builder"],[183,"clap_builder::util::id"],[184,"core::option"],[185,"anyhow"],[186,"zingen::wasm"],[187,"zingen::wasm::func"],[188,"zingen::codegen::function"],[189,"wasmparser::readers::core::data"],[190,"wasmparser::readers"],[191,"zingen::wasm::data"],[192,"wasmparser::readers::core::exports"],[193,"wasmparser::readers::core::imports"],[194,"wasmparser::binary_reader"],[195,"color_eyre::section"],[196,"core::marker"],[197,"core::error"],[198,"alloc::string"],[199,"std::path"],[200,"core::convert"]],"i":"Ed`000```Cd``10`AlCb`f01`000``210Db11111``3121111``33333333333333`Bf000000000000000000000`333333333333333333`1111111111111111111111`Ch00000000000000000077776`76`7777777777777777`","f":"`````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}``{{{b{f}}}f}{{b{b{dc}}}h{}}{bh}````{{}f}`{{{b{f}}{n{{l{j}}}}}{{Ab{{n{{l{j}}}}A`}}}}{{{b{f}}{b{dAd}}}{{Ab{hAf}}}}{cc{}}{{}c{}}````{{{b{df}}{Ah{{n{{l{j}}}}{n{{l{j}}}}}}}{{Ab{hA`}}}}`{bc{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bAj}```>=`{{}Al}{c{{Ab{Al}}}An}{{{b{Al}}{b{dAd}}}B`}98`{{{b{Al}}c}AbBb}654``{BdBd}0{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{}Bd}0`{{{b{Bf}}{b{dAd}}}B`}?{{{b{Bh}}}{{Ab{BfBj}}}}{{{b{dBh}}}{{Ab{BfBj}}}}{{}{{Bn{Bl}}}}`{{}c{}}`{{{b{Bf}}}{{C`{h}}}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bAj}{{{b{dBf}}{b{Bh}}}{{Ab{hBj}}}}{{{b{dBf}}{b{dBh}}}{{Ab{hBj}}}}``{Cb{{Cd{Al}}}}>=`{{Cb{b{{Cf{j}}}}}{{Cd{Al}}}}{{{b{dCb}}{b{dCh}}}{{Cd{h}}}}{{{b{dCb}}CjCl}{{Cd{h}}}}`{{}Cb}{{{b{dCb}}CnD`}{{Cd{h}}}}{cc{}}={DbCb}`<;:`{BdBd}0{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{}Bd}0{{}Db}{c{{Ab{Db}}}An}{{DbDd}Db}`{{{b{Db}}{b{dAd}}}B`}9{{{b{Bh}}}{{Ab{DbBj}}}}{{{b{dBh}}}{{Ab{DbBj}}}}{{}{{Bn{Bl}}}}{{}c{}}{{{b{Db}}c}AbBb}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bAj}{{{b{dDb}}{b{Bh}}}{{Ab{hBj}}}}{{{b{dDb}}{b{dBh}}}{{Ab{hBj}}}}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{Dh{Df}}}}}{{Cd{Dj}}}}`{{}Ch}{{{b{{Dh{Dl}}}}}{{Cd{Dn}}}}`{cc{}}`{{{b{{Dh{E`}}}}}{{Cd{Eb}}}}`={{{b{dCh}}{b{{Cf{j}}}}}{{Cd{h}}}}{{{b{Ch}}}Cj}0={{{b{{Cf{j}}}}}{{Cd{Ch}}}}=<`````````98{{{b{Ed}}{b{dAd}}}B`}05{EfEd}{EhEd}{A`Ed}{c{{Ej{ce}}}{ElEnF`}{}}{{}}{{}c{}}{{{b{Ed}}}{{Bn{{b{Fb}}}}}}{bFd}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bAj}{{ce}{{C`{h}}}{{Fh{Ff}}}{{Fh{Ff}}}}","D":"Jn","p":[[1,"reference"],[0,"mut"],[5,"Constructor",0,171],[1,"unit"],[1,"u8"],[1,"array"],[5,"SmallVec",172],[6,"Error",173],[6,"Result",174],[5,"Formatter",175],[5,"Error",175],[5,"HashMap",176],[5,"TypeId",177],[5,"Artifact",45],[10,"Deserializer",178],[8,"Result",175],[10,"Serializer",179],[5,"Command",180],[5,"Compile",60],[5,"ArgMatches",181],[8,"Error",182],[5,"Id",183],[6,"Option",184],[8,"Result",185],[5,"Compiler",83],[8,"Result",145],[1,"slice"],[5,"Parser",125],[5,"Env",186],[5,"Function",187],[1,"u32"],[5,"Function",188],[5,"Config",102],[1,"bool"],[5,"Data",189],[5,"SectionLimited",190],[5,"Data",191],[5,"Export",192],[5,"Exports",186],[5,"Import",193],[5,"Imports",186],[6,"Error",145],[5,"Error",185],[5,"BinaryReaderError",194],[5,"IndentedSection",195],[10,"Display",175],[10,"Send",196],[10,"Sync",196],[10,"Error",197],[5,"String",198],[5,"Path",199],[10,"AsRef",200]],"r":[[1,45],[5,83],[6,102],[7,171],[9,145],[10,171],[13,145]],"b":[[156,"impl-Debug-for-Error"],[157,"impl-Display-for-Error"],[159,"impl-From%3CError%3E-for-Error"],[160,"impl-From%3CBinaryReaderError%3E-for-Error"],[161,"impl-From%3CError%3E-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFQAHQASAAEAFgACAB0AAAAgAAAAIwAAACkAAwAwAAEAMwACADkAAwA/AAUARgAAAEgAAgBPAAQAVwABAF4AAABkAAIAaAAHAHIAAAB0AAIAeAAFAH8AAQCCAAEAhQAAAIcAAACJAAAAjgADAJsAAwCgAAQApgAEAA=="}],["zinkc_filetests",{"t":"TTTTTTTTTTTTTTTTTTTTTTTTTTTTTFNNNNNNQNNOONNNNO","n":["BR_IF_AS_BLOCK_LAST","CALL_AS_IF","CALL_DUMMY","CALL_PARAMS","I32ADD_LOCALS","I32ADD_PARAMS","I32ADD_TEE","I32SUB_LOCALS","I32SUB_PARAMS","I64ADD_LOCALS","I64ADD_PARAMS","I64ADD_TEE","I64SUB_LOCALS","I64SUB_PARAMS","IF_BASIC","IF_SINGULAR","LOG_LOG0","LOG_LOG1","LOG_LOG2","LOG_LOG3","LOG_LOG4","LOOP_AS_BR_IF","LOOP_SINGULAR","RECURSION_FIBONACCI","SELECT_PARAMS","STORAGE_BASIC","STORAGE_DISPATCHER","STORAGE_LOAD","STORAGE_STORE","Test","borrow","borrow_mut","clone","clone_into","clone_to_uninit","from","impl_tests","into","load","module","name","to_owned","try_from","try_into","type_id","wasm"],"q":[[0,"zinkc_filetests"],[46,"anyhow"],[47,"core::result"],[48,"core::any"]],"i":"f0000000000000000000000000000`000000`000000000","f":"``````````````````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}f}{{b{b{dc}}}h{}}{bh}{cc{}}`{{}c{}}{{{b{j}}{b{j}}}{{l{f}}}}``{bc{}}{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bA`}`","D":"Dl","p":[[1,"reference"],[0,"mut"],[5,"Test",0],[1,"unit"],[1,"str"],[8,"Result",46],[6,"Result",47],[5,"TypeId",48]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAgAAgAfAAQAKgADAA=="}],["zint",{"t":"PKPPFPPPPPFPPGFPPPPPPPPPPPGPPPPPPPINNOONNNNCNNNNNNOCONNNNNNNNCNNNNOONNEONNHEOCOHOMNNMNNNNNNOKQMMFONNNNNONNONNNNNNNNNNNOSSFSFONNNNNNNNNNNNNNOOONNNOOONNNNNNNNFFNNNNNNNNNNOOHHNNNNNNH","n":["Basic","Bytes32","CallNotAllowedInsideStatic","CallTooDeep","Contract","CreateCollision","CreateContractSizeLimit","CreateContractStartingWithEF","CreateInitCodeSizeLimit","EOFFunctionStackOverflow","EVM","EofAuxDataOverflow","EofAuxDataTooSmall","HaltReason","Info","InvalidEXTCALLTarget","InvalidFEOpcode","InvalidJump","InvalidOperand","Memory","MemoryLimit","NonceOverflow","NotActivated","OpcodeNotFound","OutOfFunds","OutOfGas","OutOfGasError","OutOfOffset","OverflowPayment","Precompile","PrecompileError","StackOverflow","StackUnderflow","StateChangeDuringStaticCall","U256","__clone_box","","address","artifact","borrow","","borrow_mut","","bytes","clone","","clone_into","","clone_to_uninit","","constructor","contract","dispatcher","eq","","equivalent","","","","","","evm","fmt","","from","","gas","halt","hash","","hex","inner","into","","keccak256","log","logs","lookup","ret","setup_logger","storage","to_bytes32","to_owned","","to_vec","try_from","","try_into","","type_id","","wasm","Bytes32","impl_bytes32","to_bytes32","to_vec","Contract","artifact","borrow","borrow_mut","bytecode","compile","construct","constructor","current","default","dispatcher","encode","execute","from","","into","json_abi","pure","search","try_from","try_into","type_id","wasm","ALICE","CONTRACT","EVM","GAS_LIMIT","Info","address","borrow","","borrow_mut","","call","calldata","contract","db","default","","deploy","fmt","from","","gas","halt","inner","interp","into","","logs","ret","storage","try_from","","","","try_into","","type_id","","Manifest","Package","borrow","","borrow_mut","","deserialize","","from","","into","","name","package","pkg_name","target_dir","try_from","","try_into","","type_id","","wasm"],"q":[[0,"zint"],[92,"zint::bytes"],[96,"zint::contract"],[119,"zint::evm"],[156,"zint::lookup"],[179,"dyn_clone::sealed"],[180,"revm_primitives::result"],[181,"core::fmt"],[182,"core::result"],[183,"core::hash"],[184,"alloc::vec"],[185,"core::any"],[186,"anyhow"],[187,"zingen::codegen::constructor"],[188,"core::convert"],[189,"alloc::string"],[190,"revm::db::in_memory_db"],[191,"revm_primitives::env"],[192,"serde::de"],[193,"std::path"],[194,"alloy_primitives::aliases"],[195,"zabi::selector"]],"i":"l`j0`00000`00``00011100000`0010000`01BlBd2323`2323230`023222333`23231123`Cb34``2`2`2An4504545452``00`2222222222222222222222`````31313111113131333111333313331313``D`Dd1010101001``101010`","f":"```````````````````````````````````{{bd}f}0``{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0`{{{b{j}}}j}{{{b{l}}}l}{{b{b{hc}}}f{}}0{bf}0```{{{b{j}}{b{j}}}n}{{{b{l}}{b{l}}}n}{{b{b{c}}}n{}}00000`{{{b{j}}{b{hA`}}}{{Ad{fAb}}}}{{{b{l}}{b{hA`}}}{{Ad{fAb}}}}{cc{}}0``{{{b{j}}{b{hc}}}fAf}{{{b{l}}{b{hc}}}fAf}``{{}c{}}0{{{b{{Aj{Ah}}}}}{{Al{Ah}}}}````{{}f}`{{{b{An}}}{{Al{Ah}}}}{bc{}}0{{{b{An}}}{{B`{Ah}}}}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{bBb}0```53``{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{Bd}}}{{Bf{{B`{Ah}}}}}}{Bd{{Bf{Bd}}}}{{{b{hBd}}Bh}{{Bf{{b{hBd}}}}}}`{{}{{Bf{Bd}}}}{{}Bd}`{{{b{Bd}}e}{{Bf{{B`{Ah}}}}}An{{Bj{{Aj{c}}}}}}{{{b{hBd}}e}{{Bf{Bl}}}An{{Bj{{Aj{c}}}}}}{cc{}}{cBd{{Bj{{Aj{Ah}}}}}}{{}c{}}{{{b{Bd}}}{{Bf{Bn}}}}{BdBd}{{{b{C`}}}{{Bf{Bd}}}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bBb}```````{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{hCb}}{Al{Ah}}}{{Bf{Bl}}}}{{{b{hCb}}{b{{Aj{Ah}}}}}{{b{hCb}}}}{{Cb{b{{Aj{Ah}}}}}Cb}{{{b{hCb}}}{{b{hCd}}}}{{}Cb}{{}Bl}{{{b{hCb}}{b{{Aj{Ah}}}}}{{Bf{Bl}}}}{{{b{Bl}}{b{hA`}}}Cf}{cc{}}0```{{{b{{Aj{Ah}}}}{b{{Aj{Ah}}}}}{{Bf{Bl}}}}{{}c{}}0```??{{{Cl{ChCj}}}{{Bf{Bl}}}}{Cn{{Bf{Bl}}}}{{}{{Ad{c}}}{}}0{bBb}0``{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{c{{Ad{D`}}}Db}{c{{Ad{Dd}}}Db}::88``{{}{{Bf{Bn}}}}{{}{{Bf{Df}}}}{c{{Ad{e}}}{}{}}08877{{{b{C`}}}{{Bf{Df}}}}","D":"Jn","p":[[1,"reference"],[5,"Private",179],[1,"unit"],[0,"mut"],[6,"HaltReason",0,180],[6,"OutOfGasError",0,180],[1,"bool"],[5,"Formatter",181],[5,"Error",181],[6,"Result",182],[10,"Hasher",183],[1,"u8"],[1,"slice"],[1,"array"],[10,"Bytes32",92],[5,"Vec",184],[5,"TypeId",185],[5,"Contract",96],[8,"Result",186],[8,"InitStorage",187],[10,"AsRef",188],[5,"Info",119],[5,"String",189],[1,"str"],[5,"EVM",119],[8,"InMemoryDB",190],[8,"Result",181],[5,"ResultAndState",180],[8,"TransactTo",191],[1,"tuple"],[6,"ExecutionResult",180],[5,"Manifest",156],[10,"Deserializer",192],[5,"Package",156],[5,"PathBuf",193]],"r":[[1,92],[4,96],[10,119],[13,180],[14,119],[26,180],[34,194],[74,195]],"b":[[150,"impl-TryFrom%3C(ResultAndState,+TxKind)%3E-for-Info"],[151,"impl-TryFrom%3CExecutionResult%3E-for-Info"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFwAGAABAAAAAwABAAYAAAARABEAJAABACgAAwAtAAUANgAHAD8AAQBFAAMATAAAAFMAAQBWAAUAYwABAGoAAABvAAAAdAACAH4AAwCFAAIAiQAAAI4AAACVAAcAnwAFAK0ABQA="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[5824,5453,2528,2130,49838,1664,531,5992,1188,4836]}