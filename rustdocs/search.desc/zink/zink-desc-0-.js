searchState.loadedDescShard("zink", 0, "Zink library for developing smart contracts for …\nTypes implemented this trait are able to be pushed on …\nZink event interface\nEvent logging interface\nAssembly trait implementation.\nCheck and expression and revert with the input message\nPublic traits for the EVM interfaces\nMark the function as an external entry point.\nZink FFI.\nGenerate a keccak hash of the input (sha3)\nZink primitive types\nPush self on the stack.\nRevert with the input message\nZink storage implementation.\nDeclare on-chain storage\nConvert bytes to ls bytes\nDeclare transient storage (cleared after each transaction)\nTypes implemented this trait are able to be pushed on …\nPush self on the stack.\nZink event interface\nEqual operation for addresses\nAssembly FFI.\nEmit ABI to host state.\nEVM FFI.\nSet up a label for reserving 32 bytes in memory\nSet up a label for reserving 64 bytes in memory\nEqual operation for addresses\nAddmod operation for addresses\nEqual operation for addresses\nLess than operation for addresses\nEqual operation for addresses\nEqual operation for addresses\nEqual operation for addresses\nReturns zero value\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nPush address to stack\nPush a 16-bit signed integer to the stack.\nPush a 32-bit signed integer to the stack.\nPush a 64-bit signed integer to the stack.\nPush a 8-bit signed integer to the stack.\nPush a 16-bit unsigned integer to the stack.\nPush u256 to stack\nPush a 32-bit unsigned integer to the stack.\nPush a 64-bit unsigned integer to the stack.\nPush a 8-bit unsigned integer to the stack.\nRevert with message in 32 bytes\nRevert with message in 64 bytes\nRevert with message in 96 bytes\nRevert with message in 128 bytes\nLoad address from storage\nLoad a 16-bit signed integer from the storage.\nLoad a 32-bit signed integer from the storage.\nLoad a 64-bit signed integer from the storage.\nLoad a 8-bit signed integer from the storage.\nLoad a 16-bit unsigned integer from the storage.\nLoad address from storage\nLoad a 32-bit unsigned integer from the storage.\nLoad a 64-bit unsigned integer from the storage.\nLoad a 8-bit unsigned integer from the storage.\nLoad address from transient storage\nLoad a 16-bit signed integer from the transient storage.\nLoad a 32-bit signed integer from the transient storage.\nLoad a 64-bit signed integer from the transient storage.\nLoad a 8-bit signed integer from the transient storage.\nLoad a 16-bit unsigned integer from the transient storage.\nLoad U256 from transient storage\nLoad a 32-bit unsigned integer from the transient storage.\nLoad a 64-bit unsigned integer from the transient storage.\nLoad a 8-bit unsigned integer from the transient storage.\nStore address to transient storage\nStore a 16-bit signed integer to the transient storage.\nStore a 32-bit signed integer to the transient storage.\nStore a 64-bit signed integer to the transient storage.\nStore a 8-bit signed integer to the transient storage.\nStore a 16-bit unsigned integer to the transient storage.\nStore U256 to transient storage\nStore a 32-bit unsigned integer to the transient storage.\nStore a 64-bit unsigned integer to the transient storage.\nStore a 8-bit unsigned integer to the transient storage.\nGet the current blob base fee\nGet the current blob hash at index\nGet the current message sender\nCompute Keccak-256 hash\nAppend log record with no topics\nAppend log record with one topics\nAppend log record with two topics\nAppend log record with three topics\nAppend log record with four topics\nCopy memory to memory\nLoad word from memory\nSave word to memory\nSave byte to memory\nPush 1 byte to the stack.\nPush 1 byte to the stack.\nPush 10 bytes to the stack.\nPush 11 bytes to the stack.\nPush 12 bytes to the stack.\nPush 13 bytes to the stack.\nPush 14 bytes to the stack.\nPush 15 bytes to the stack.\nPush 16 bytes to the stack.\nPush 17 bytes to the stack.\nPush 18 bytes to the stack.\nPush 19 bytes to the stack.\nPush 2 bytes to the stack.\nPush 20 bytes to the stack.\nPush 21 bytes to the stack.\nPush 22 bytes to the stack.\nPush 23 bytes to the stack.\nPush 24 bytes to the stack.\nPush 25 bytes to the stack.\nPush 26 bytes to the stack.\nPush 27 bytes to the stack.\nPush 28 bytes to the stack.\nPush 29 bytes to the stack.\nPush 3 bytes to the stack.\nPush 30 bytes to the stack.\nPush 31 bytes to the stack.\nPush 32 bytes to the stack.\nPush 4 bytes to the stack.\nPush 5 bytes to the stack.\nPush 6 bytes to the stack.\nPush 7 bytes to the stack.\nPush 8 bytes to the stack.\nPush 9 bytes to the stack.\nLoad a value from the storage\nStore a value in the storage\nLoad a value from the transient storage\nStore a value in the transient storage\nAccount address\nAccount address\nAccount address\nReturns empty address\nReturns empty address\nif self equal to another\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA trait for modular arithmetic operations on numeric types.\nAccount address\nu256 add\nAddmod for U256\nReturns empty address\nu256 eq\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nu256 less than\nmax of u256\nMulmod for U256\nu256 sub\nReturns zero value\nStorage mapping interface\nTransient storage mapping interface\nStorage mapping interface\nStorage trait. Currently not for public use\nInterface for the value of kv based storage\nTransient storage mapping interface\nTransient storage trait. Currently not for public use\nInterface for the value of kv based transient storage\nDouble key mapping\nStorage Mapping\nLoad from storage\nLoad from transient storage\nKey-Value storage\nStorage mapping interface\nTransient storage mapping interface\nGet value from storage key.\nGet value from storage key.\nGet value from transient storage key.\nGet value from transient storage key.\nLoad storage key to stack\nSet key and value\nSet key and value\nSet key and value in transient storage\nSet key and value in transient storage\nStorage mapping interface\nTransient storage mapping interface\nGet value from storage key.\nGet value from storage key.\nGet value from transient storage key.\nGet value from transient storage key.\nLoad storage key to stack\nSet key and value\nSet key and value\nSet key and value in transient storage\nSet key and value in transient storage\nStorage trait. Currently not for public use\nTransient storage trait. Currently not for public use\nGet value from storage.\nGet value from storage.\nGet value from transient storage.\nGet value from transient storage.\nSet value to storage.\nSet value to storage.\nSet value to transient storage.\nSet value to transient storage.")