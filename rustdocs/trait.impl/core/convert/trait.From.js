(function() {
    var implementors = Object.fromEntries([["elko",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"elko/utils/result/enum.Error.html\" title=\"enum elko::utils::result::Error\">Error</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.88/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt; for <a class=\"enum\" href=\"elko/utils/result/enum.Error.html\" title=\"enum elko::utils::result::Error\">Error</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"enum\" href=\"elko/utils/result/enum.Error.html\" title=\"enum elko::utils::result::Error\">Error</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"enum\" href=\"elko/utils/result/enum.Error.html\" title=\"enum elko::utils::result::Error\">Error</a>"]]],["evm_opcodes",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"evm_opcodes/shanghai/enum.ShangHai.html\" title=\"enum evm_opcodes::shanghai::ShangHai\">ShangHai</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"enum\" href=\"evm_opcodes/shanghai/enum.ShangHai.html\" title=\"enum evm_opcodes::shanghai::ShangHai\">ShangHai</a>"]]],["sol_abi",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"enum\" href=\"sol_abi/abi/enum.Type.html\" title=\"enum sol_abi::abi::Type\">Type</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"enum\" href=\"sol_abi/arg/enum.Param.html\" title=\"enum sol_abi::arg::Param\">Param</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"enum\" href=\"https://docs.rs/syn/2.0.77/syn/ty/enum.Type.html\" title=\"enum syn::ty::Type\">Type</a>&gt;&gt; for <a class=\"enum\" href=\"sol_abi/arg/enum.Param.html\" title=\"enum sol_abi::arg::Param\">Param</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/syn/2.0.77/syn/item/struct.Signature.html\" title=\"struct syn::item::Signature\">Signature</a>&gt; for <a class=\"struct\" href=\"sol_abi/abi/struct.Abi.html\" title=\"struct sol_abi::abi::Abi\">Abi</a>"]]],["zabi",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/syn/2.0.77/syn/item/struct.Signature.html\" title=\"struct syn::item::Signature\">Signature</a>&gt; for <a class=\"struct\" href=\"zabi/struct.Abi.html\" title=\"struct zabi::Abi\">Abi</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://docs.rs/hex/0.4.3/hex/error/enum.FromHexError.html\" title=\"enum hex::error::FromHexError\">FromHexError</a>&gt; for <a class=\"enum\" href=\"zabi/result/enum.Error.html\" title=\"enum zabi::result::Error\">Error</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"enum\" href=\"zabi/result/enum.Error.html\" title=\"enum zabi::result::Error\">Error</a>"]]],["zingen",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"zabi/result/enum.Error.html\" title=\"enum zabi::result::Error\">Error</a>&gt; for <a class=\"enum\" href=\"zingen/result/enum.Error.html\" title=\"enum zingen::result::Error\">Error</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BinaryReaderError&gt; for <a class=\"enum\" href=\"zingen/result/enum.Error.html\" title=\"enum zingen::result::Error\">Error</a>"]]],["zink_codegen",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(<a class=\"enum\" href=\"zink_codegen/storage/enum.StorageType.html\" title=\"enum zink_codegen::storage::StorageType\">StorageType</a>, <a class=\"struct\" href=\"https://docs.rs/syn/2.0.77/syn/item/struct.ItemStruct.html\" title=\"struct syn::item::ItemStruct\">ItemStruct</a>)&gt; for <a class=\"struct\" href=\"zink_codegen/storage/struct.Storage.html\" title=\"struct zink_codegen::storage::Storage\">Storage</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/proc_macro/struct.TokenStream.html\" title=\"struct proc_macro::TokenStream\">TokenStream</a>&gt; for <a class=\"enum\" href=\"zink_codegen/storage/enum.StorageType.html\" title=\"enum zink_codegen::storage::StorageType\">StorageType</a>"]]],["zinkc",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"zingen/result/enum.Error.html\" title=\"enum zingen::result::Error\">Error</a>&gt; for <a class=\"enum\" href=\"zinkc/result/enum.Error.html\" title=\"enum zinkc::result::Error\">Error</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.88/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt; for <a class=\"enum\" href=\"zinkc/result/enum.Error.html\" title=\"enum zinkc::result::Error\">Error</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BinaryReaderError&gt; for <a class=\"enum\" href=\"zinkc/result/enum.Error.html\" title=\"enum zinkc::result::Error\">Error</a>"]]],["zint",[["impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"zint/contract/struct.Contract.html\" title=\"struct zint::contract::Contract\">Contract</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,</div>"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[1366,774,1643,1057,651,1033,1033,581]}